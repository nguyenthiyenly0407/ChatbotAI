[
    {
        "question": "What is JavaScript?",
        "label": "javascript",
        "language": "en",
        "context": "JavaScript is a programming language commonly used in web development.",
        "answer": "JavaScript is a versatile, high-level programming language used primarily for web development.",
        "start_char": 0,
        "end_char": 94
    },
    {
        "question": "What is the difference between let, const, and var?",
        "label": "javascript",
        "language": "en",
        "context": "JavaScript provides three ways to declare variables: let, const, and var.",
        "answer": "let allows block-scoped variables, const is for constant values, and var is function-scoped.",
        "start_char": 0,
        "end_char": 92
    },
    {
        "question": "What is a closure in JavaScript?",
        "label": "javascript",
        "language": "en",
        "context": "Closures allow a function to access variables from an outer function's scope.",
        "answer": "A closure is a function that retains access to its outer scope even after the outer function has executed.",
        "start_char": 0,
        "end_char": 106
    },
    {
        "question": "What is the purpose of the 'this' keyword?",
        "label": "javascript",
        "language": "en",
        "context": "'this' refers to the object that is currently executing the function.",
        "answer": "'this' is dynamically bound depending on how a function is called.",
        "start_char": 0,
        "end_char": 66
    },
    {
        "question": "What are template literals?",
        "label": "javascript",
        "language": "en",
        "context": "Template literals are string literals allowing embedded expressions.",
        "answer": "Template literals are enclosed by backticks (`) and can contain placeholders for variables.",
        "start_char": 0,
        "end_char": 91
    },
    {
        "question": "What is the difference between == and ===?",
        "label": "javascript",
        "language": "en",
        "context": "JavaScript provides two equality operators: == and ===.",
        "answer": "== compares values with type coercion, while === compares both value and type strictly.",
        "start_char": 0,
        "end_char": 87
    },
    {
        "question": "What is a Promise?",
        "label": "javascript",
        "language": "en",
        "context": "A Promise in JavaScript represents a value that may be available now, or in the future, or never.",
        "answer": "A Promise is an object that represents an asynchronous operation and its result.",
        "start_char": 0,
        "end_char": 80
    },
    {
        "question": "What is the Event Loop?",
        "label": "javascript",
        "language": "en",
        "context": "The Event Loop is a mechanism that allows JavaScript to perform non-blocking I/O operations.",
        "answer": "The Event Loop continuously checks the call stack and the message queue to execute tasks.",
        "start_char": 0,
        "end_char": 89
    },
    {
        "question": "What are arrow functions?",
        "label": "javascript",
        "language": "en",
        "context": "Arrow functions provide a concise syntax for writing function expressions.",
        "answer": "Arrow functions do not have their own 'this' context and are often used for callbacks.",
        "start_char": 0,
        "end_char": 86
    },
    {
        "question": "What is the purpose of JSON?",
        "label": "javascript",
        "language": "en",
        "context": "JSON (JavaScript Object Notation) is a lightweight data interchange format.",
        "answer": "JSON is used for data interchange between client and server in web applications.",
        "start_char": 0,
        "end_char": 80
    },
    {
        "question": "What is the difference between synchronous and asynchronous programming?",
        "label": "javascript",
        "language": "en",
        "context": "Synchronous code is executed sequentially, while asynchronous code can execute out of order.",
        "answer": "Synchronous programming blocks execution, while asynchronous programming allows other tasks to run concurrently.",
        "start_char": 0,
        "end_char": 112
    },
    {
        "question": "What is the DOM?",
        "label": "javascript",
        "language": "en",
        "context": "The Document Object Model (DOM) represents the structure of a document as a tree of objects.",
        "answer": "The DOM allows JavaScript to dynamically manipulate HTML and CSS content.",
        "start_char": 0,
        "end_char": 73
    },
    {
        "question": "What is localStorage?",
        "label": "javascript",
        "language": "en",
        "context": "localStorage is a web storage API that allows storage of data in the browser.",
        "answer": "localStorage allows you to store key/value pairs in a web browser with no expiration time.",
        "start_char": 0,
        "end_char": 90
    },
    {
        "question": "What is sessionStorage?",
        "label": "javascript",
        "language": "en",
        "context": "sessionStorage is similar to localStorage but with a different scope.",
        "answer": "sessionStorage stores data for the duration of the page session, which lasts as long as the browser is open.",
        "start_char": 0,
        "end_char": 108
    },
    {
        "question": "What is a higher-order function?",
        "label": "javascript",
        "language": "en",
        "context": "A higher-order function is a function that takes another function as an argument.",
        "answer": "Higher-order functions can also return functions as their result.",
        "start_char": 0,
        "end_char": 65
    },
    {
        "question": "What is the spread operator?",
        "label": "javascript",
        "language": "en",
        "context": "The spread operator allows an iterable to expand in places where zero or more arguments are expected.",
        "answer": "The spread operator is denoted by three dots (...) and is used to unpack elements from arrays or objects.",
        "start_char": 0,
        "end_char": 105
    },
    {
        "question": "What is destructuring in JavaScript?",
        "label": "javascript",
        "language": "en",
        "context": "Destructuring is a syntax that allows unpacking values from arrays or properties from objects.",
        "answer": "Destructuring makes it easier to extract values from arrays or objects into distinct variables.",
        "start_char": 0,
        "end_char": 95
    },
    {
        "question": "What is an IIFE?",
        "label": "javascript",
        "language": "en",
        "context": "An IIFE (Immediately Invoked Function Expression) is a function that runs as soon as it is defined.",
        "answer": "IIFEs are used to create a new scope and avoid polluting the global scope.",
        "start_char": 0,
        "end_char": 74
    },
    {
        "question": "What is the purpose of the 'bind' method?",
        "label": "javascript",
        "language": "en",
        "context": "The 'bind' method creates a new function that, when called, has its 'this' keyword set to the provided value.",
        "answer": "'bind' is used to set the context of 'this' for a function, allowing it to be called with a specific object.",
        "start_char": 0,
        "end_char": 108
    },
    {
        "question": "What is a callback function?",
        "label": "javascript",
        "language": "en",
        "context": "A callback function is a function passed into another function as an argument.",
        "answer": "Callback functions are often used for asynchronous operations, such as handling events.",
        "start_char": 0,
        "end_char": 87
    },
    {
        "question": "What is the difference between a function declaration and a function expression?",
        "label": "javascript",
        "language": "en",
        "context": "Function declarations and expressions are two ways to define functions in JavaScript.",
        "answer": "Function declarations are hoisted, while function expressions are not hoisted.",
        "start_char": 0,
        "end_char": 78
    },
    {
        "question": "What is the 'typeof' operator?",
        "label": "javascript",
        "language": "en",
        "context": "The 'typeof' operator returns a string indicating the type of the unevaluated operand.",
        "answer": "'typeof' can be used to check the type of variables, such as 'string', 'number', 'object', etc.",
        "start_char": 0,
        "end_char": 95
    },
    {
        "question": "What is a module in JavaScript?",
        "label": "javascript",
        "language": "en",
        "context": "Modules are reusable pieces of code that can be exported and imported in JavaScript.",
        "answer": "JavaScript modules help in organizing code and managing dependencies.",
        "start_char": 0,
        "end_char": 69
    },
    {
        "question": "What is the purpose of the 'async' keyword?",
        "label": "javascript",
        "language": "en",
        "context": "The 'async' keyword is used to declare an asynchronous function.",
        "answer": "'async' functions always return a Promise, and they allow the use of 'await' within them.",
        "start_char": 0,
        "end_char": 89
    },
    {
        "question": "What is the 'await' keyword?",
        "label": "javascript",
        "language": "en",
        "context": "The 'await' keyword is used to wait for a Promise to resolve.",
        "answer": "'await' can only be used inside 'async' functions and pauses the execution until the Promise is resolved.",
        "start_char": 0,
        "end_char": 105
    },
    {
        "question": "What is the difference between 'null' and 'undefined'?",
        "label": "javascript",
        "language": "en",
        "context": "'null' and 'undefined' are both primitive values in JavaScript.",
        "answer": "'null' is an intentional absence of any object value, while 'undefined' means a variable has been declared but not assigned a value.",
        "start_char": 0,
        "end_char": 132
    },
    {
        "question": "What is a JavaScript object?",
        "label": "javascript",
        "language": "en",
        "context": "An object is a collection of properties, each with a key and a value.",
        "answer": "JavaScript objects can store multiple values in the form of key-value pairs.",
        "start_char": 0,
        "end_char": 76
    },
    {
        "question": "What is the purpose of the 'forEach' method?",
        "label": "javascript",
        "language": "en",
        "context": "The 'forEach' method executes a provided function once for each array element.",
        "answer": "'forEach' is used to iterate over arrays and perform operations on each element.",
        "start_char": 0,
        "end_char": 80
    },
    {
        "question": "What is the 'map' method?",
        "label": "javascript",
        "language": "en",
        "context": "The 'map' method creates a new array populated with the results of calling a provided function on every element.",
        "answer": "'map' is used to transform each element in an array and return a new array.",
        "start_char": 0,
        "end_char": 75
    },
    {
        "question": "What is the 'filter' method?",
        "label": "javascript",
        "language": "en",
        "context": "The 'filter' method creates a new array with all elements that pass the test implemented by the provided function.",
        "answer": "'filter' is used to remove elements from an array that do not meet a specified condition.",
        "start_char": 0,
        "end_char": 89
    },
    {
        "question": "What is the 'reduce' method?",
        "label": "javascript",
        "language": "en",
        "context": "The 'reduce' method executes a reducer function on each element of the array, resulting in a single output value.",
        "answer": "'reduce' is used to accumulate values from an array into a single result.",
        "start_char": 0,
        "end_char": 73
    },
    {
        "question": "What is event delegation?",
        "label": "javascript",
        "language": "en",
        "context": "Event delegation is a technique that allows you to attach a single event listener to a parent element.",
        "answer": "This approach improves performance and simplifies event management by handling events at a higher level.",
        "start_char": 0,
        "end_char": 104
    },
    {
        "question": "What is the purpose of the 'setTimeout' function?",
        "label": "javascript",
        "language": "en",
        "context": "The 'setTimeout' function is used to execute a function after a specified number of milliseconds.",
        "answer": "'setTimeout' allows you to delay the execution of a function.",
        "start_char": 0,
        "end_char": 61
    },
    {
        "question": "What is the purpose of the 'setInterval' function?",
        "label": "javascript",
        "language": "en",
        "context": "The 'setInterval' function repeatedly calls a function with a fixed time delay between each call.",
        "answer": "'setInterval' is used to execute a function at specified intervals.",
        "start_char": 0,
        "end_char": 67
    },
    {
        "question": "What is a JavaScript promise chain?",
        "label": "javascript",
        "language": "en",
        "context": "A promise chain is a sequence of promises that are executed in order.",
        "answer": "Promise chaining allows you to perform asynchronous operations in a sequential manner.",
        "start_char": 0,
        "end_char": 86
    },
    {
        "question": "What is the purpose of the 'catch' method in promises?",
        "label": "javascript",
        "language": "en",
        "context": "The 'catch' method is used to handle errors in promise chains.",
        "answer": "'catch' allows you to define a callback function that will be executed if the promise is rejected.",
        "start_char": 0,
        "end_char": 98
    },
    {
        "question": "What is the 'finally' method in promises?",
        "label": "javascript",
        "language": "en",
        "context": "The 'finally' method is used to execute code after a promise is settled, regardless of its outcome.",
        "answer": "'finally' is useful for cleanup actions that need to occur after a promise is resolved or rejected.",
        "start_char": 0,
        "end_char": 99
    },
    {
        "question": "What is the purpose of the 'console.log' function?",
        "label": "javascript",
        "language": "en",
        "context": "The 'console.log' function is used to print messages to the web console.",
        "answer": "'console.log' is commonly used for debugging purposes to display variable values and messages.",
        "start_char": 0,
        "end_char": 94
    },
    {
        "question": "What is the 'window' object?",
        "label": "javascript",
        "language": "en",
        "context": "The 'window' object represents the browser window and is the global object in a web browser.",
        "answer": "The 'window' object provides access to the browser's features and functions.",
        "start_char": 0,
        "end_char": 76
    },
    {
        "question": "What is the 'document' object?",
        "label": "javascript",
        "language": "en",
        "context": "The 'document' object represents the web page loaded in the browser.",
        "answer": "The 'document' object allows you to manipulate the content and structure of the web page.",
        "start_char": 0,
        "end_char": 89
    },
    {
        "question": "What is the purpose of the 'addEventListener' method?",
        "label": "javascript",
        "language": "en",
        "context": "The 'addEventListener' method attaches an event handler to a specified element.",
        "answer": "'addEventListener' allows you to listen for specific events on DOM elements.",
        "start_char": 0,
        "end_char": 76
    },
    {
        "question": "What is the 'fetch' API?",
        "label": "javascript",
        "language": "en",
        "context": "The 'fetch' API provides a modern way to make network requests.",
        "answer": "'fetch' returns a Promise that resolves to the Response object representing the response to the request.",
        "start_char": 0,
        "end_char": 104
    },
    {
        "question": "What is the purpose of the 'async' and 'await' keywords?",
        "label": "javascript",
        "language": "en",
        "context": "The 'async' and 'await' keywords simplify working with Promises.",
        "answer": "'async' functions return a Promise, and 'await' pauses execution until the Promise is resolved.",
        "start_char": 0,
        "end_char": 95
    },
    {
        "question": "What is a service worker?",
        "label": "javascript",
        "language": "en",
        "context": "A service worker is a script that runs in the background, separate from a web page.",
        "answer": "Service workers enable features like offline access and background sync.",
        "start_char": 0,
        "end_char": 72
    },
    {
        "question": "What is the purpose of the 'import' statement?",
        "label": " javascript",
        "language": "en",
        "context": "The 'import' statement is used to bring in modules or specific exports from other files.",
        "answer": "'import' allows you to use functions, objects, or primitives exported from another module.",
        "start_char": 0,
        "end_char": 90
    },
    {
        "question": "What is the 'export' statement?",
        "label": "javascript",
        "language": "en",
        "context": "The 'export' statement is used to export functions, objects, or primitives from a module.",
        "answer": "'export' allows other modules to access the exported entities.",
        "start_char": 0,
        "end_char": 62
    },
    {
        "question": "What is the purpose of the 'Promise.race' method?",
        "label": "javascript",
        "language": "en",
        "context": "The 'Promise.race' method returns a promise that resolves or rejects as soon as one of the promises in the iterable resolves or rejects.",
        "answer": "'Promise.race' is useful for handling multiple promises and taking action based on the first one to settle.",
        "start_char": 0,
        "end_char": 107
    },
    {
        "question": "What is the 'Array.prototype.includes' method?",
        "label": "javascript",
        "language": "en",
        "context": "The 'includes' method determines whether an array includes a certain value among its entries.",
        "answer": "'includes' returns true if the array contains the specified value, otherwise false.",
        "start_char": 0,
        "end_char": 83
    },
    {
        "question": "What is the 'Array.prototype.find' method?",
        "label": "javascript",
        "language": "en",
        "context": "The 'find' method returns the value of the first element in the array that satisfies the provided testing function.",
        "answer": "'find' returns undefined if no elements satisfy the testing function.",
        "start_char": 0,
        "end_char": 69
    },
    {
        "question": "What is the 'Array.prototype.every' method?",
        "label": "javascript",
        "language": "en",
        "context": "The 'every' method tests whether all elements in the array pass the test implemented by the provided function.",
        "answer": "'every' returns true if the callback function returns a truthy value for every array element.",
        "start_char": 0,
        "end_char": 93
    },
    {
        "question": "What is Python?",
        "label": "python",
        "language": "en",
        "context": "Python is a high-level, interpreted programming language known for its readability and versatility.",
        "answer": "Python is a popular programming language that emphasizes code readability and simplicity.",
        "start_char": 0,
        "end_char": 89
    },
    {
        "question": "What are Python lists?",
        "label": "python",
        "language": "en",
        "context": "Lists are a built-in data type in Python that can hold an ordered collection of items.",
        "answer": "Python lists are mutable sequences that can contain elements of different data types.",
        "start_char": 0,
        "end_char": 85
    },
    {
        "question": "What is the difference between a list and a tuple in Python?",
        "label": "python",
        "language": "en",
        "context": "Both lists and tuples are used to store collections of items in Python.",
        "answer": "Lists are mutable, while tuples are immutable.",
        "start_char": 0,
        "end_char": 46
    },
    {
        "question": "What is a dictionary in Python?",
        "label": "python",
        "language": "en",
        "context": "Dictionaries are a built-in data type in Python that store key-value pairs.",
        "answer": "Dictionaries are mutable and allow for fast retrieval of values based on their keys.",
        "start_char": 0,
        "end_char": 84
    },
    {
        "question": "What is a function in Python?",
        "label": "python",
        "language": "en",
        "context": "Functions are reusable blocks of code that perform a specific task.",
        "answer": "In Python, functions are defined using the 'def' keyword.",
        "start_char": 0,
        "end_char": 57
    },
    {
        "question": "What is a lambda function?",
        "label": "python",
        "language": "en",
        "context": "Lambda functions are small anonymous functions defined with the 'lambda' keyword.",
        "answer": "Lambda functions can take any number of arguments but can only have one expression.",
        "start_char": 0,
        "end_char": 83
    },
    {
        "question": "What are Python decorators?",
        "label": "python",
        "language": "en",
        "context": "Decorators are a way to modify or enhance functions or methods in Python.",
        "answer": "Decorators are defined using the '@' symbol followed by the decorator function name.",
        "start_char": 0,
        "end_char": 84
    },
    {
        "question": "What is the purpose of the 'self' keyword in Python?",
        "label": "python",
        "language": "en",
        "context": "The 'self' keyword is used in instance methods to refer to the instance of the class.",
        "answer": "'self' allows access to instance variables and methods from within the class.",
        "start_char": 0,
        "end_char": 77
    },
    {
        "question": "What is exception handling in Python?",
        "label": "python",
        "language": "en",
        "context": "Exception handling is a mechanism to handle errors gracefully in Python.",
        "answer": "In Python, exceptions are handled using 'try', 'except', and 'finally' blocks.",
        "start_char": 0,
        "end_char": 78
    },
    {
        "question": "What is a module in Python?",
        "label": "python",
        "language": "en",
        "context": "Modules are files containing Python code that can define functions, classes, and variables.",
        "answer": "Modules allow for code organization and reuse across different programs.",
        "start_char": 0,
        "end_char": 72
    },
    {
        "question": "What is the purpose of the 'import' statement?",
        "label": "python",
        "language": "en",
        "context": "The 'import' statement is used to include modules in a Python program.",
        "answer": "'import' allows access to functions and classes defined in other modules.",
        "start_char": 0,
        "end_char": 73
    },
    {
        "question": "What is a list comprehension?",
        "label": "python",
        "language": "en",
        "context": "List comprehensions provide a concise way to create lists in Python.",
        "answer": "List comprehensions consist of brackets containing an expression followed by a 'for' clause.",
        "start_char": 0,
        "end_char": 92
    },
    {
        "question": "What is the difference between '==' and 'is' in Python?",
        "label": "python",
        "language": "en",
        "context": "Both '==' and 'is' are used for comparison in Python.",
        "answer": "'==' checks for value equality, while 'is' checks for identity (whether they are the same object).",
        "start_char": 0,
        "end_char": 98
    },
    {
        "question": "What is the purpose of the 'with' statement?",
        "label": "python",
        "language": "en",
        "context": "The 'with' statement is used to wrap the execution of a block with methods defined by a context manager.",
        "answer": "'with' simplifies exception handling by encapsulating common preparation and cleanup tasks.",
        "start_char": 0,
        "end_char": 91
    },
    {
        "question": "What is a generator in Python?",
        "label": "python",
        "language": "en",
        "context": "Generators are a type of iterable that generate values on the fly and do not store them in memory.",
        "answer": "Generators are defined using the 'yield' keyword and can be iterated over using a loop.",
        "start_char": 0,
        "end_char": 87
    },
    {
        "question": "What is the purpose of the 'pass' statement?",
        "label": "python",
        "language": "en",
        "context": "The 'pass' statement is a null operation in Python.",
        "answer": "'pass' is used as a placeholder in code where a statement is syntactically required but no action is needed.",
        "start_char": 0,
        "end_char": 108
    },
    {
        "question": "What is the purpose of the 'break' statement?",
        "label": "python",
        "language": "en",
        "context": "The 'break' statement is used to exit a loop prematurely.",
        "answer": "'break' terminates the nearest enclosing loop.",
        "start_char": 0,
        "end_char": 46
    },
    {
        "question": "What is the purpose of the 'continue' statement?",
        "label": "python",
        "language": "en",
        "context": "The 'continue' statement is used to skip the current iteration of a loop.",
        "answer": "'continue' causes the loop to skip the rest of its body and continue with the next iteration.",
        "start_char": 0,
        "end_char": 93
    },
    {
        "question": "What is the purpose of the 'return' statement?",
        "label": "python",
        "language": "en",
        "context": "The 'return' statement is used to exit a function and return a value.",
        "answer": "'return' can return a value to the caller of the function.",
        "start_char": 0,
        "end_char": 58
    },
    {
        "question": "What is the purpose of the 'len()' function?",
        "label": "python",
        "language": "en",
        "context": "The 'len()' function returns the number of items in an object.",
        "answer": "'len()' can be used with strings, lists, tuples, and other collections.",
        "start_char": 0,
        "end_char": 71
    },
    {
        "question": "What is the purpose of the 'range()' function?",
        "label": "python",
        "language": "en",
        "context": "The 'range()' function generates a sequence of numbers.",
        "answer": "'range()' is commonly used in for loops to iterate over a sequence of numbers.",
        "start_char": 0,
        "end_char": 78
    },
    {
        "question": "What is the purpose of the 'map()' function?",
        "label": "python",
        "language": "en",
        "context": "The 'map()' function applies a given function to all items in an iterable.",
        "answer": "'map()' returns a map object (an iterator) that can be converted to a list.",
        "start_char": 0,
        "end_char": 75
    },
    {
        "question": "What is the purpose of the 'filter()' function?",
        "label": "python",
        "language": "en",
        "context": "The 'filter()' function constructs an iterator from elements of an iterable for which a function returns true.",
        "answer": "'filter()' is used to filter elements from a collection based on a condition.",
        "start_char": 0,
        "end_char": 77
    },
    {
        "question": "What is the purpose of the 'reduce()' function?",
        "label": "python",
        "language": "en",
        "context": "The 'reduce()' function applies a rolling computation to sequential pairs of values in an iterable.",
        "answer": "'reduce()' is part of the 'functools' module and returns a single accumulated value.",
        "start_char": 0,
        "end_char": 84
    },
    {
        "question": "What is the purpose of the 'sorted()' function?",
        "label": "python",
        "language": "en",
        "context": "The 'sorted()' function returns a new sorted list from the elements of any iterable.",
        "answer": "'sorted()' can take an optional key function to customize the sorting order.",
        "start_char": 0,
        "end_char": 76
    },
    {
        "question": "What is the purpose of the 'zip()' function?",
        "label": "python",
        "language": "en",
        "context": "The 'zip()' function returns an iterator of tuples, where the i-th tuple contains the i-th element from each of the argument iterables.",
        "answer": "'zip()' is useful for combining multiple iterables into a single iterable.",
        "start_char": 0,
        "end_char": 74
    },
    {
        "question": "What is the purpose of the 'enumerate()' function?",
        "label": "python",
        "language": "en",
        "context": "The 'enumerate()' function adds a counter to an iterable and returns it as an enumerate object.",
        "answer": "'enumerate()' is often used in loops to get both the index and the value of items.",
        "start_char": 0,
        "end_char": 82
    },
    {
        "question": "What is the purpose of the 'input()' function?",
        "label": "python",
        "language": "en",
        "context": "The 'input()' function reads a line from input, converts it to a string, and returns it.",
        "answer": "'input()' is used to get user input from the console.",
        "start_char": 0,
        "end_char": 53
    },
    {
        "question": "What is the purpose of the 'print()' function?",
        "label": "python",
        "language": "en",
        "context": "The 'print()' function outputs data to the console.",
        "answer": "'print()' can take multiple arguments and format the output.",
        "start_char": 0,
        "end_char": 60
    },
    {
        "question": "What is the purpose of the 'open()' function?",
        "label": "python",
        "language": "en",
        "context": "The 'open()' function is used to open a file and return a corresponding file object.",
        "answer": "'open()' can be used to read, write, or append to files in various modes.",
        "start_char": 0,
        "end_char": 73
    },
    {
        "question": "What is the purpose of the 'close()' method?",
        "label": "python",
        "language": "en",
        "context": "The 'close()' method is used to close an open file object.",
        "answer": "'close()' ensures that any changes made to the file are saved and resources are released.",
        "start_char": 0,
        "end_char": 89
    },
    {
        "question": "What is the purpose of the 'strip()' method?",
        "label": "python",
        "language": "en",
        "context": "The 'strip()' method removes leading and trailing whitespace from a string.",
        "answer": "'strip()' can also take an optional argument to specify characters to remove.",
        "start_char": 0,
        "end_char": 77
    },
    {
        "question": "What is the purpose of the 'split()' method?",
        "label": "python",
        "language": "en",
        "context": "The 'split()' method splits a string into a list based on a specified delimiter.",
        "answer": "'split()' returns a list of substrings.",
        "start_char": 0,
        "end_char": 39
    },
    {
        "question": "What is the purpose of the 'join()' method?",
        "label": "python",
        "language": "en",
        "context": "The 'join()' method concatenates a list of strings into a single string with a specified separator.",
        "answer": "'join()' is called on the separator string and takes an iterable as an argument.",
        "start_char": 0,
        "end_char": 80
    },
    {
        "question": "What is the purpose of the 'replace()' method?",
        "label": "python",
        "language": "en",
        "context": "The 'replace()' method returns a copy of the string with all occurrences of a substring replaced with another substring.",
        "answer": "'replace()' can take optional arguments to specify the maximum number of replacements.",
        "start_char": 0,
        "end_char": 86
    },
    {
        "question": "What is the purpose of the 'find()' method?",
        "label": "python",
        "language": "en",
        "context": "The 'find()' method returns the lowest index of the substring if found in the string.",
        "answer": "'find()' returns -1 if the substring is not found.",
        "start_char": 0,
        "end_char": 50
    },
    {
        "question": "What is the purpose of the 'count()' method?",
        "label": "python",
        "language": "en",
        "context": "The 'count()' method returns the number of occurrences of a substring in the string.",
        "answer": "'count()' can take optional arguments to specify the start and end indices.",
        "start_char": 0,
        "end_char": 75
    },
    {
        "question": "What is the purpose of the 'format()' method?",
        "label": "python",
        "language": "en",
        "context": "The 'format()' method formats specified values and inserts them into a string.",
        "answer": "'format()' allows for more complex string formatting using placeholders.",
        "start_char": 0,
        "end_char": 72
    },
    {
        "question": "What is the purpose of the 'sorted()' function?",
        "label": "python",
        "language": "en",
        "context": "The 'sorted()' function returns a new sorted list from the elements of any iterable.",
        "answer": "'sorted()' can take an optional key function to customize the sorting order.",
        "start_char": 0,
        "end_char": 76
    },
    {
        "question": "What is the purpose of the 'any()' function?",
        "label": "python",
        "language": "en",
        "context": "The 'any()' function returns True if any element of the iterable is true.",
        "answer": "'any()' is useful for checking if at least one condition is met.",
        "start_char": 0,
        "end_char": 64
    },
    {
        "question": "What is the purpose of the 'all()' function?",
        "label": "python",
        "language": "en",
        "context": "The 'all()' function returns True if all elements of the iterable are true.",
        "answer": "'all()' is useful for checking if all conditions are met.",
        "start_char": 0,
        "end_char": 57
    },
    {
        "question": "What is the purpose of the 'sum()' function?",
        "label": "python",
        "language": "en",
        "context": "The 'sum()' function returns the sum of a start value (default: 0) plus an iterable of numbers.",
        "answer": "'sum()' is commonly used to calculate the total of a list of numbers.",
        "start_char": 0,
        "end_char": 69
    },
    {
        "question": "What is the purpose of the 'min()' function?",
        "label": "python",
        "language": "en",
        "context": "The 'min()' function returns the smallest item in an iterable or the smallest of two or more arguments.",
        "answer": "'min()' is useful for finding the minimum value in a collection.",
        "start_char": 0,
        "end_char": 64
    },
    {
        "question": "What is the purpose of the 'max()' function?",
        "label": "python",
        "language": "en",
        "context": "The 'max()' function returns the largest item in an iterable or the largest of two or more arguments.",
        "answer": "'max()' is useful for finding the maximum value in a collection.",
        "start_char": 0,
        "end_char": 64
    },
    {
        "question": "What is the purpose of the 'slice' method?",
        "label": "python",
        "language": "en",
        "context": "The 'slice' method returns a portion of a list or string based on specified indices.",
        "answer": "'slice' allows you to extract a subset of elements from a sequence.",
        "start_char": 0,
        "end_char": 67
    },
    {
        "question": "What is the purpose of the 'reverse' method?",
        "label": "python",
        "language": "en",
        "context": "The 'reverse' method reverses the elements of a list in place.",
        "answer": "'reverse' modifies the original list and does not return a new list.",
        "start_char": 0,
        "end_char": 68
    },
    {
        "question": "What is the purpose of the 'append' method?",
        "label": "python",
        "language": "en",
        "context": "The 'append' method adds an item to the end of a list.",
        "answer": "'append' modifies the original list by adding the specified element.",
        "start_char": 0,
        "end_char": 68
    },
    {
        "question": "What is the purpose of the 'insert' method?",
        "label": "python",
        "language": "en",
        "context": "The 'insert' method adds an item at a specified index in a list.",
        "answer": "'insert' shifts the elements to the right to accommodate the new item.",
        "start_char": 0,
        "end_char": 70
    },
    {
        "question": "What is the purpose of the 'remove' method?",
        "label": "python",
        "language": "en",
        "context": "The 'remove' method removes the first occurrence of a specified value from a list.",
        "answer": "'remove' raises a ValueError if the specified value is not found.",
        "start_char": 0,
        "end_char": 65
    },
    {
        "question": "What is the purpose of the 'pop' method?",
        "label": "python",
        "language": "en",
        "context": "The 'pop' method removes and returns an item at a specified index from a list.",
        "answer": "'pop' defaults to removing the last item if no index is specified.",
        "start_char": 0,
        "end_char": 66
    },
    {
        "question": "What is Java?",
        "label": "java",
        "language": "en",
        "context": "Java is a high-level, object-oriented programming language designed to have as few implementation dependencies as possible.",
        "answer": "Java is a versatile programming language used for building platform-independent applications.",
        "start_char": 0,
        "end_char": 93
    },
    {
        "question": "What is the Java Virtual Machine (JVM)?",
        "label": "java",
        "language": "en",
        "context": "The JVM is an abstract computing machine that enables a computer to run Java programs.",
        "answer": "The JVM converts Java bytecode into machine code, allowing Java applications to run on any device with a JVM.",
        "start_char": 0,
        "end_char": 109
    },
    {
        "question": "What is the difference between JDK, JRE, and JVM?",
        "label": "java",
        "language": "en",
        "context": "JDK, JRE, and JVM are components of the Java programming environment.",
        "answer": "JDK (Java Development Kit) includes tools for developing Java applications, JRE (Java Runtime Environment) provides libraries and JVM for running Java applications, and JVM (Java Virtual Machine) executes Java bytecode.",
        "start_char": 0,
        "end_char": 219
    },
    {
        "question": "What is a class in Java?",
        "label": "java",
        "language": "en",
        "context": "A class is a blueprint for creating objects in Java.",
        "answer": "A class defines the properties (attributes) and behaviors (methods) that the objects created from it will have.",
        "start_char": 0,
        "end_char": 111
    },
    {
        "question": "What is an object in Java?",
        "label": "java",
        "language": "en",
        "context": "An object is an instance of a class in Java.",
        "answer": "Objects represent real-world entities and have state and behavior defined by their class.",
        "start_char": 0,
        "end_char": 89
    },
    {
        "question": "What is inheritance in Java?",
        "label": "java",
        "language": "en",
        "context": "Inheritance is a mechanism in Java that allows one class to inherit the properties and methods of another class.",
        "answer": "Inheritance promotes code reusability and establishes a relationship between classes.",
        "start_char": 0,
        "end_char": 85
    },
    {
        "question": "What is polymorphism in Java?",
        "label": "java",
        "language": "en",
        "context": "Polymorphism allows methods to do different things based on the object that it is acting upon.",
        "answer": "In Java, polymorphism can be achieved through method overloading and method overriding.",
        "start_char": 0,
        "end_char": 87
    },
    {
        "question": "What is encapsulation in Java?",
        "label": "java",
        "language": "en",
        "context": "Encapsulation is the bundling of data (attributes) and methods (functions) that operate on the data into a single unit, or class.",
        "answer": "Encapsulation restricts direct access to some of an object's components and can prevent the accidental modification of data.",
        "start_char": 0,
        "end_char": 124
    },
    {
        "question": "What is an interface in Java?",
        "label": "java",
        "language": "en",
        "context": "An interface in Java is a reference type that can contain only constants, method signatures, default methods, static methods, and nested types.",
        "answer": "Interfaces are used to achieve abstraction and multiple inheritance in Java.",
        "start_char": 0,
        "end_char": 76
    },
    {
        "question": "What is an abstract class in Java?",
        "label": "java",
        "language": "en",
        "context": "An abstract class is a class that cannot be instantiated and can contain abstract methods that must be implemented by subclasses.",
        "answer": "Abstract classes are used to provide a base for subclasses to extend and implement specific behaviors.",
        "start_char": 0,
        "end_char": 102
    },
    {
        "question": "What is the main method in Java?",
        "label": "java",
        "language": "en",
        "context": "The main method is the entry point of any Java application.",
        "answer": "The main method is defined as 'public static void main(String[] args)'.",
        "start_char": 0,
        "end_char": 71
    },
    {
        "question": "What is a constructor in Java?",
        "label": "java",
        "language": "en",
        "context": "A constructor is a special method used to initialize objects in Java.",
        "answer": "Constructors have the same name as the class and do not have a return type.",
        "start_char": 0,
        "end_char": 75
    },
    {
        "question": "What is method overloading in Java?",
        "label": "java",
        "language": "en",
        "context": "Method overloading allows multiple methods in the same class to have the same name with different parameters.",
        "answer": "Method overloading is used to increase the readability of the program.",
        "start_char": 0,
        "end_char": 70
    },
    {
        "question": "What is method overriding in Java?",
        "label": "java",
        "language": "en",
        "context": "Method overriding allows a subclass to provide a specific implementation of a method that is already defined in its superclass.",
        "answer": "Method overriding is used to achieve runtime polymorphism.",
        "start_char": 0,
        "end_char": 58
    },
    {
        "question": "What is the 'super' keyword in Java?",
        "label": "java",
        "language": "en",
        "context": "The 'super' keyword is used to refer to the immediate parent class object.",
        "answer": "'super' can be used to access parent class methods and constructors.",
        "start_char": 0,
        "end_char": 68
    },
    {
        "question": "What is the 'this' keyword in Java?",
        "label": "java",
        "language": "en",
        "context": "The 'this' keyword refers to the current object in a method or constructor.",
        "answer": "'this' is used to differentiate between instance variables and parameters with the same name.",
        "start_char": 0,
        "end_char": 93
    },
    {
        "question": "What is exception handling in Java?",
        "label": "java",
        "language": "en",
        "context": "Exception handling is a mechanism to handle runtime errors in Java.",
        "answer": "Java uses 'try', 'catch', and 'finally' blocks to handle exceptions.",
        "start_char": 0,
        "end_char": 68
    },
    {
        "question": "What is the difference between checked and unchecked exceptions?",
        "label": "java",
        "language": "en",
        "context": "Exceptions in Java are categorized into checked and unchecked exceptions.",
        "answer": "Checked exceptions must be declared in a method's throws clause, while unchecked exceptions do not.",
        "start_char": 0,
        "end_char": 99
    },
    {
        "question": "What is the 'finally' block in Java?",
        "label": "java",
        "language": "en",
        "context": "The 'finally' block is used to execute important code such as closing resources, regardless of whether an exception is thrown.",
        "answer": "The 'finally' block always executes after the 'try' and 'catch' blocks.",
        "start_char": 0,
        "end_char": 71
    },
    {
        "question": "What is the 'throw' keyword in Java?",
        "label": "java",
        "language": "en",
        "context": "The 'throw' keyword is used to explicitly throw an exception in Java.",
        "answer": "'throw' is followed by an instance of the exception class.",
        "start_char": 0,
        "end_char": 58
    },
    {
        "question": "What is the 'throws' keyword in Java?",
        "label": "java",
        "language": "en",
        "context": "The 'throws' keyword is used in method declarations to specify that a method can throw exceptions.",
        "answer": "'throws' is used to declare checked exceptions that a method may throw.",
        "start_char": 0,
        "end_char": 71
    },
    {
        "question": "What is the Java Collections Framework?",
        "label": "java",
        "language": "en",
        "context": "The Java Collections Framework provides a set of classes and interfaces for storing and manipulating groups of data.",
        "answer": "It includes data structures like lists, sets, and maps.",
        "start_char": 0,
        "end_char": 55
    },
    {
        "question": "What is an ArrayList in Java?",
        "label": "java",
        "language": "en",
        "context": "ArrayList is a resizable array implementation of the List interface.",
        "answer": "ArrayList allows dynamic arrays that can grow as needed.",
        "start_char": 0,
        "end_char": 56
    },
    {
        "question": "What is a HashMap in Java?",
        "label": "java",
        "language": "en",
        "context": "HashMap is a part of the Java Collections Framework that implements the Map interface.",
        "answer": "HashMap stores key-value pairs and allows for fast retrieval based on keys.",
        "start_char": 0,
        "end_char": 75
    },
    {
        "question": "What is the difference between ArrayList and LinkedList?",
        "label": "java",
        "language": "en",
        "context": "ArrayList and LinkedList are both implementations of the List interface.",
        "answer": "ArrayList is backed by a dynamic array, while LinkedList is backed by a doubly linked list.",
        "start_char": 0,
        "end_char": 91
    },
    {
        "question": "What is a Set in Java?",
        "label": "java",
        "language": "en",
        "context": "A Set is a collection that does not allow duplicate elements.",
        "answer": "HashSet and TreeSet are common implementations of the Set interface.",
        "start_char": 0,
        "end_char": 68
    },
    {
        "question": "What is a Map in Java?",
        "label": "java",
        "language": "en",
        "context": "A Map is an object that maps keys to values, with no duplicate keys allowed.",
        "answer": "HashMap and TreeMap are common implementations of the Map interface.",
        "start_char": 0,
        "end_char": 68
    },
    {
        "question": "What is the purpose of the 'static' keyword in Java?",
        "label": "java",
        "language": "en",
        "context": "The 'static' keyword is used to indicate that a member belongs to the class rather than instances of the class.",
        "answer": "Static members can be accessed without creating an instance of the class.",
        "start_char": 0,
        "end_char": 73
    },
    {
        "question": "What is the purpose of the 'final' keyword in Java?",
        "label": "java",
        "language": "en",
        "context": "The 'final' keyword is used to declare constants, prevent method overriding, and prevent inheritance.",
        "answer": "Final variables cannot be reassigned, final methods cannot be overridden, and final classes cannot be subclassed.",
        "start_char": 0,
        "end_char": 113
    },
    {
        "question": "What is the purpose of the 'abstract' keyword in Java?",
        "label": "java",
        "language": "en",
        "context": "The 'abstract' keyword is used to declare a class that cannot be instantiated or a method that must be implemented by subclasses.",
        "answer": "Abstract classes can contain both abstract methods and concrete methods.",
        "start_char": 0,
        "end_char": 72
    },
    {
        "question": "What is the purpose of the 'volatile' keyword in Java?",
        "label": "java",
        "language": "en",
        "context": "The 'volatile' keyword is used to indicate that a variable's value will be modified by different threads.",
        "answer": "Volatile variables ensure visibility of changes to variables across threads.",
        "start_char": 0,
        "end_char": 76
    },
    {
        "question": "What is a thread in Java?",
        "label": "java",
        "language": "en",
        "context": "A thread is a lightweight process that can run concurrently with other threads.",
        "answer": "Java provides built-in support for multithreading, allowing multiple threads to run simultaneously.",
        "start_char": 0,
        "end_char": 99
    },
    {
        "question": "What is synchronization in Java?",
        "label": "java",
        "language": "en",
        "context": "Synchronization is a mechanism that ensures that two or more concurrent threads do not execute the same code at the same time.",
        "answer": "Synchronization can be achieved using synchronized methods or blocks.",
        "start_char": 0,
        "end_char": 69
    },
    {
        "question": "What is the purpose of the 'synchronized' keyword?",
        "label": "java",
        "language": "en",
        "context": "The 'synchronized' keyword is used to control access to a block of code or an object by multiple threads.",
        "answer": "It prevents thread interference and memory consistency errors.",
        "start_char": 0,
        "end_char": 62
    },
    {
        "question": "What is a deadlock in Java?",
        "label": "java",
        "language": "en",
        "context": "A deadlock occurs when two or more threads are blocked forever, each waiting on the other.",
        "answer": "Deadlocks can be avoided by careful design of thread interactions.",
        "start_char": 0,
        "end_char": 66
    },
    {
        "question": "What is the Java Memory Model?",
        "label": "java",
        "language": "en",
        "context": "The Java Memory Model defines how threads interact through memory and what behaviors are allowed.",
        "answer": "It provides rules for visibility and ordering of variable access.",
        "start_char": 0,
        "end_char": 65
    },
    {
        "question": "What is garbage collection in Java?",
        "label": "java",
        "language": "en",
        "context": "Garbage collection is the process of automatically reclaiming memory by removing objects that are no longer in use.",
        "answer": "Java has an automatic garbage collection mechanism that helps manage memory.",
        "start_char": 0,
        "end_char": 76
    },
    {
        "question": "What is the purpose of the 'instanceof' operator?",
        "label": "java",
        "language": "en",
        "context": "The 'instanceof' operator is used to test whether an object is an instance of a specific class or interface.",
        "answer": "'instanceof' returns true if the object is an instance of the specified type.",
        "start_char": 0,
        "end_char": 77
    },
    {
        "question": "What is a Java package?",
        "label": "java",
        "language": "en",
        "context": "A package is a namespace that organizes a set of related classes and interfaces.",
        "answer": "Packages help avoid naming conflicts and can control access with protected and default access levels.",
        "start_char": 0,
        "end_char": 101
    },
    {
        "question": "What is the purpose of the 'import' statement in Java?",
        "label": "java",
        "language": "en",
        "context": "The 'import' statement is used to bring other classes or entire packages into visibility.",
        "answer": "It allows the use of classes from other packages without needing to specify their full names.",
        "start_char": 0,
        "end_char": 93
    },
    {
        "question": "What is the Java Development Kit (JDK)?",
        "label": "java",
        "language": "en",
        "context": "The JDK is a software development environment used for developing Java applications.",
        "answer": "It includes the Java Runtime Environment (JRE), compilers, and tools for Java development.",
        "start_char": 0,
        "end_char": 90
    },
    {
        "question": "What is the Java Runtime Environment (JRE)?",
        "label": "java",
        "language": "en",
        "context": "The JRE provides the libraries, Java Virtual Machine (JVM), and other components to run applications written in Java.",
        "answer": "It does not include development tools like compilers or debuggers.",
        "start_char": 0,
        "end_char": 66
    },
    {
        "question": "What is the purpose of the 'main' method in Java?",
        "label": "java",
        "language": "en",
        "context": "The 'main' method serves as the entry point for any standalone Java application.",
        "answer": "It must be declared as 'public static void main(String[] args)'.",
        "start_char": 0,
        "end_char": 64
    },
    {
        "question": "What is the purpose of the 'static' keyword in Java?",
        "label": "java",
        "language": "en",
        "context": "The 'static' keyword indicates that a member belongs to the class rather than instances of the class.",
        "answer": "Static members can be accessed without creating an instance of the class.",
        "start_char": 0,
        "end_char": 73
    },
    {
        "question": "What is the purpose of the 'final' keyword in Java?",
        "label": "java",
        "language": "en",
        "context": "The 'final' keyword is used to declare constants, prevent method overriding, and prevent inheritance.",
        "answer": "Final variables cannot be reassigned, final methods cannot be overridden, and final classes cannot be subclassed.",
        "start_char": 0,
        "end_char": 113
    },
    {
        "question": "What is the purpose of the 'abstract' keyword in Java?",
        "label": "java",
        "language": "en",
        "context": "The 'abstract' keyword is used to declare a class that cannot be instantiated or a method that must be implemented by subclasses.",
        "answer": "Abstract classes can contain both abstract methods and concrete methods.",
        "start_char": 0,
        "end_char": 72
    },
    {
        "question": "What is the purpose of the 'volatile' keyword in Java?",
        "label": "java",
        "language": "en",
        "context": "The 'volatile' keyword is used to indicate that a variable's value will be modified by different threads.",
        "answer": "Volatile variables ensure visibility of changes to variables across threads.",
        "start_char": 0,
        "end_char": 76
    },
    {
        "question": "What is a thread in Java?",
        "label": "java",
        "language": "en",
        "context": "A thread is a lightweight process that can run concurrently with other threads.",
        "answer": "Java provides built-in support for multithreading, allowing multiple threads to run simultaneously.",
        "start_char": 0,
        "end_char": 99
    },
    {
        "question": "What is synchronization in Java?",
        "label": "java",
        "language": "en",
        "context": "Synchronization is a mechanism that ensures that two or more concurrent threads do not execute the same code at the same time.",
        "answer": "Synchronization can be achieved using synchronized methods or blocks.",
        "start_char": 0,
        "end_char": 69
    },
    {
        "question": "What is the purpose of the 'synchronized' keyword?",
        "label": "java",
        "language": "en",
        "context": "The 'synchronized' keyword is used to control access to a block of code or an object by multiple threads.",
        "answer": "It prevents thread interference and memory consistency errors.",
        "start_char": 0,
        "end_char": 62
    },
    {
        "question": "What is C#?",
        "label": "csharp",
        "language": "en",
        "context": "C# is a modern, object-oriented programming language developed by Microsoft.",
        "answer": "C# is used for building a variety of applications, including web, mobile, and desktop applications.",
        "start_char": 0,
        "end_char": 99
    },
    {
        "question": "What is the .NET Framework?",
        "label": "csharp",
        "language": "en",
        "context": ".NET Framework is a software development framework created by Microsoft for building and running applications on Windows.",
        "answer": ".NET Framework provides a large class library and supports various programming languages, including C#.",
        "start_char": 0,
        "end_char": 103
    },
    {
        "question": "What is the difference between a class and an object in C#?",
        "label": "csharp",
        "language": "en",
        "context": "Classes and objects are fundamental concepts in object-oriented programming.",
        "answer": "A class is a blueprint for creating objects, while an object is an instance of a class.",
        "start_char": 0,
        "end_char": 87
    },
    {
        "question": "What is encapsulation in C#?",
        "label": "csharp",
        "language": "en",
        "context": "Encapsulation is the bundling of data and methods that operate on that data within a single unit, or class.",
        "answer": "Encapsulation restricts direct access to some of an object's components and can prevent the accidental modification of data.",
        "start_char": 0,
        "end_char": 124
    },
    {
        "question": "What is inheritance in C#?",
        "label": "csharp",
        "language": "en",
        "context": "Inheritance is a mechanism that allows one class to inherit the properties and methods of another class.",
        "answer": "Inheritance promotes code reusability and establishes a relationship between classes.",
        "start_char": 0,
        "end_char": 85
    },
    {
        "question": "What is polymorphism in C#?",
        "label": "csharp",
        "language": "en",
        "context": "Polymorphism allows methods to do different things based on the object that it is acting upon.",
        "answer": "In C#, polymorphism can be achieved through method overloading and method overriding.",
        "start_char": 0,
        "end_char": 85
    },
    {
        "question": "What is an interface in C#?",
        "label": "csharp",
        "language": "en",
        "context": "An interface is a contract that defines a set of methods and properties that implementing classes must provide.",
        "answer": "Interfaces allow for multiple inheritance and provide a way to achieve abstraction.",
        "start_char": 0,
        "end_char": 83
    },
    {
        "question": "What is an abstract class in C#?",
        "label": "csharp",
        "language": "en",
        "context": "An abstract class cannot be instantiated and can contain abstract methods that must be implemented by derived classes.",
        "answer": "Abstract classes are used to provide a base for subclasses to extend and implement specific behaviors.",
        "start_char": 0,
        "end_char": 102
    },
    {
        "question": "What is the purpose of the 'static' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'static' keyword indicates that a member belongs to the class itself rather than to instances of the class.",
        "answer": "Static members can be accessed without creating an instance of the class.",
        "start_char": 0,
        "end_char": 73
    },
    {
        "question": "What is a constructor in C#?",
        "label": "csharp",
        "language": "en",
        "context": "A constructor is a special method used to initialize objects in C#.",
        "answer": "Constructors have the same name as the class and do not have a return type.",
        "start_char": 0,
        "end_char": 75
    },
    {
        "question": "What is method overloading in C#?",
        "label": "csharp",
        "language": "en",
        "context": "Method overloading allows multiple methods in the same class to have the same name with different parameters.",
        "answer": "Method overloading is used to increase the readability of the program.",
        "start_char": 0,
        "end_char": 70
    },
    {
        "question": "What is method overriding in C#?",
        "label": "csharp",
        "language": "en",
        "context": "Method overriding allows a subclass to provide a specific implementation of a method that is already defined in its superclass.",
        "answer": "Method overriding is used to achieve runtime polymorphism.",
        "start_char": 0,
        "end_char": 58
    },
    {
        "question": "What is the 'base' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'base' keyword is used to access members of the base class from a derived class.",
        "answer": "'base' can be used to call base class constructors and methods.",
        "start_char": 0,
        "end_char": 63
    },
    {
        "question": "What is the 'this' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'this' keyword refers to the current instance of the class.",
        "answer": "'this' is used to differentiate between instance variables and parameters with the same name.",
        "start_char": 0,
        "end_char": 93
    },
    {
        "question": "What is exception handling in C#?",
        "label": "csharp",
        "language": "en",
        "context": "Exception handling is a mechanism to handle runtime errors in C#.",
        "answer": "C# uses 'try', 'catch', and 'finally' blocks to handle exceptions.",
        "start_char": 0,
        "end_char": 66
    },
    {
        "question": "What is the difference between checked and unchecked exceptions in C#?",
        "label": "csharp",
        "language": "en",
        "context": "C# categorizes exceptions into checked and unchecked exceptions.",
        "answer": "Checked exceptions must be declared in a method's throws clause, while unchecked exceptions do not.",
        "start_char": 0,
        "end_char": 99
    },
    {
        "question": "What is the 'finally' block in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'finally' block is used to execute important code such as closing resources, regardless of whether an exception is thrown.",
        "answer": "The 'finally' block always executes after the 'try' and 'catch' blocks.",
        "start_char": 0,
        "end_char": 71
    },
    {
        "question": "What is the 'throw' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'throw' keyword is used to explicitly throw an exception in C#.",
        "answer": "'throw' is followed by an instance of the exception class.",
        "start_char": 0,
        "end_char": 58
    },
    {
        "question": "What is the 'throws' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "C# does not have a 'throws' keyword like Java; instead, exceptions are handled using 'try-catch' blocks.",
        "answer": "In C#, you can document exceptions that a method can throw in the method's XML documentation.",
        "start_char": 0,
        "end_char": 93
    },
    {
        "question": "What is the purpose of the 'using' statement in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'using' statement is used to ensure that IDisposable objects are disposed of properly.",
        "answer": "'using' automatically calls the Dispose method on the object when the block is exited.",
        "start_char": 0,
        "end_char": 86
    },
    {
        "question": "What is the C# Collections Framework?",
        "label": "csharp",
        "language": "en",
        "context": "The C# Collections Framework provides a set of classes and interfaces for storing and manipulating groups of data.",
        "answer": "It includes data structures like lists, dictionaries, and queues.",
        "start_char": 0,
        "end_char": 65
    },
    {
        "question": "What is a List in C#?",
        "label": "csharp",
        "language": "en",
        "context": "List is a generic collection that represents a list of objects that can be accessed by index.",
        "answer": "List allows dynamic arrays that can grow as needed.",
        "start_char": 0,
        "end_char": 51
    },
    {
        "question": "What is a Dictionary in C#?",
        "label": "csharp",
        "language": "en",
        "context": "Dictionary is a collection that stores key-value pairs.",
        "answer": "Dictionary allows for fast retrieval based on keys.",
        "start_char": 0,
        "end_char": 51
    },
    {
        "question": "What is the difference between List and Array in C#?",
        "label": "csharp",
        "language": "en",
        "context": "List and Array are both used to store collections of data in C#.",
        "answer": "List is dynamic and can grow in size, while Array has a fixed size.",
        "start_char": 0,
        "end_char": 67
    },
    {
        "question": "What is a Set in C#?",
        "label": "csharp",
        "language": "en",
        "context": "A Set is a collection that does not allow duplicate elements.",
        "answer": "HashSet is a common implementation of the Set interface.",
        "start_char": 0,
        "end_char": 56
    },
    {
        "question": "What is a Queue in C#?",
        "label": "csharp",
        "language": "en",
        "context": "A Queue is a first-in, first-out (FIFO) collection of objects.",
        "answer": "Queue allows for adding elements to the end and removing elements from the front.",
        "start_char": 0,
        "end_char": 81
    },
    {
        "question": "What is a Stack in C#?",
        "label": "csharp",
        "language": "en",
        "context": "A Stack is a last-in, first-out (LIFO) collection of objects.",
        "answer": "Stack allows for adding and removing elements from the top.",
        "start_char": 0,
        "end_char": 59
    },
    {
        "question": "What is the purpose of the 'static' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'static' keyword indicates that a member belongs to the class itself rather than to instances of the class.",
        "answer": "Static members can be accessed without creating an instance of the class.",
        "start_char": 0,
        "end_char": 73
    },
    {
        "question": "What is the purpose of the 'readonly' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'readonly' keyword is used to declare a field that can only be assigned during declaration or in a constructor.",
        "answer": "Readonly fields cannot be modified after the constructor has completed.",
        "start_char": 0,
        "end_char": 71
    },
    {
        "question": "What is the purpose of the 'const' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'const' keyword is used to declare a constant field or local variable whose value cannot be modified.",
        "answer": "Const variables must be initialized at the time of declaration and cannot be changed thereafter.",
        "start_char": 0,
        "end_char": 96
    },
    {
        "question": "What is the purpose of the 'async' and 'await' keywords in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'async' and 'await' keywords are used to work with asynchronous programming in C#.",
        "answer": "'async' marks a method as asynchronous, while 'await' is used to pause the execution until the awaited task completes.",
        "start_char": 0,
        "end_char": 118
    },
    {
        "question": "What is LINQ in C#?",
        "label": "csharp",
        "language": "en",
        "context": "LINQ (Language Integrated Query) is a set of features in C# that allows querying of data from various sources.",
        "answer": "LINQ provides a consistent model for working with data across various types of data sources.",
        "start_char": 0,
        "end_char": 92
    },
    {
        "question": "What is the purpose of the 'delegate' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "A delegate is a type that represents references to methods with a specific parameter list and return type.",
        "answer": "Delegates are used to implement event handling and callback methods.",
        "start_char": 0,
        "end_char": 68
    },
    {
        "question": "What is an event in C#?",
        "label": "csharp",
        "language": "en",
        "context": "An event is a message sent by an object to signal the occurrence of an action.",
        "answer": "Events are based on delegates and are used to provide notifications.",
        "start_char": 0,
        "end_char": 68
    },
    {
        "question": "What is the purpose of the 'lock' statement in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'lock' statement is used to ensure that a block of code runs only by one thread at a time.",
        "answer": "It helps prevent race conditions in multithreaded applications.",
        "start_char": 0,
        "end_char": 63
    },
    {
        "question": "What is a property in C#?",
        "label": "csharp",
        "language": "en",
        "context": "A property is a member that provides a flexible mechanism to read, write, or compute the value of a private field.",
        "answer": "Properties can have get and set accessors to control access to the underlying data.",
        "start_char": 0,
        "end_char": 83
    },
    {
        "question": "What is the purpose of the 'override' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'override' keyword is used to extend or modify the abstract or virtual implementation of an inherited method.",
        "answer": "It allows a derived class to provide a specific implementation of a method defined in a base class.",
        "start_char": 0,
        "end_char": 99
    },
    {
        "question": "What is the purpose of the 'virtual' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'virtual' keyword is used to indicate that a method or property can be overridden in a derived class.",
        "answer": "It allows for polymorphic behavior in derived classes.",
        "start_char": 0,
        "end_char": 54
    },
    {
        "question": "What is the purpose of the 'sealed' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'sealed' keyword is used to prevent a class from being inherited.",
        "answer": "Sealed classes cannot be used as a base class.",
        "start_char": 0,
        "end_char": 46
    },
    {
        "question": "What is the purpose of the 'partial' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'partial' keyword allows the definition of a class, struct, or interface to be split across multiple files.",
        "answer": "Partial classes enable better organization of code.",
        "start_char": 0,
        "end_char": 51
    },
    {
        "question": "What is the purpose of the 'dynamic' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'dynamic' keyword is used to declare a variable whose type is resolved at runtime.",
        "answer": "Dynamic types allow for late binding and can hold any type of data.",
        "start_char": 0,
        "end_char": 67
    },
    {
        "question": "What is the purpose of the 'var' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'var' keyword is used to declare an implicitly typed local variable.",
        "answer": "The type of the variable is determined by the compiler at compile time based on the assigned value.",
        "start_char": 0,
        "end_char": 99
    },
    {
        "question": "What is the purpose of the 'namespace' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "A namespace is a container that holds a set of related classes, interfaces, and other types.",
        "answer": "Namespaces help organize code and prevent naming conflicts.",
        "start_char": 0,
        "end_char": 59
    },
    {
        "question": "What is the purpose of the 'using' directive in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'using' directive allows the use of types in a namespace without needing to specify the full namespace.",
        "answer": "'using' simplifies code by reducing the need for fully qualified names.",
        "start_char": 0,
        "end_char": 71
    },
    {
        "question": "What is the purpose of the 'async' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'async' keyword is used to define an asynchronous method.",
        "answer": "Asynchronous methods allow for non-blocking operations, improving application responsiveness.",
        "start_char": 0,
        "end_char": 93
    },
    {
        "question": "What is the purpose of the 'await' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'await' keyword is used to pause the execution of an asynchronous method until the awaited task completes.",
        "answer": "'await' allows for asynchronous programming without blocking the main thread.",
        "start_char": 0,
        "end_char": 77
    },
    {
        "question": "What is the purpose of the 'params' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'params' keyword allows a method to accept a variable number of arguments.",
        "answer": "It enables passing an array of arguments to a method without explicitly creating an array.",
        "start_char": 0,
        "end_char": 90
    },
    {
        "question": "What is the purpose of the 'ref' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'ref' keyword is used to pass arguments by reference.",
        "answer": "Using 'ref' allows the method to modify the value of the argument.",
        "start_char": 0,
        "end_char": 66
    },
    {
        "question": "What is the purpose of the 'out' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'out' keyword is used to pass arguments to a method by reference, similar to 'ref'.",
        "answer": "However, 'out' requires that the variable be assigned a value before the method returns.",
        "start_char": 0,
        "end_char": 88
    },
    {
        "question": "What is the purpose of the 'is' keyword in C#?",
        "label": "csharp",
        "language": "en",
        "context": "The 'is' keyword is used to check if an object is compatible with a given type.",
        "answer": "'is' returns true if the object is of the specified type or can be cast to that type.",
        "start_char": 0,
        "end_char": 85
    },
    {
        "question": "What is PHP?",
        "label": "php",
        "language": "en",
        "context": "PHP is a popular general-purpose scripting language that is especially suited to web development.",
        "answer": "PHP stands for Hypertext Preprocessor and is widely used for server-side scripting.",
        "start_char": 0,
        "end_char": 83
    },
    {
        "question": "What does PHP stand for?",
        "label": "php",
        "language": "en",
        "context": "PHP is an acronym that represents a recursive initialism.",
        "answer": "PHP stands for 'PHP: Hypertext Preprocessor'.",
        "start_char": 0,
        "end_char": 45
    },
    {
        "question": "What is the difference between GET and POST methods in PHP?",
        "label": "php",
        "language": "en",
        "context": "GET and POST are two methods used to send data to the server.",
        "answer": "GET appends data to the URL, while POST sends data in the request body.",
        "start_char": 0,
        "end_char": 71
    },
    {
        "question": "What is a PHP session?",
        "label": "php",
        "language": "en",
        "context": "A session is a way to store information (in variables) to be used across multiple pages.",
        "answer": "Sessions allow you to maintain state and store user data across different pages.",
        "start_char": 0,
        "end_char": 80
    },
    {
        "question": "What is a PHP cookie?",
        "label": "php",
        "language": "en",
        "context": "Cookies are small files that are stored on the user's computer by the web browser.",
        "answer": "Cookies are used to remember information about the user, such as login details.",
        "start_char": 0,
        "end_char": 79
    },
    {
        "question": "How do you declare a variable in PHP?",
        "label": "php",
        "language": "en",
        "context": "Variables in PHP are declared with a dollar sign followed by the variable name.",
        "answer": "A variable is declared using the syntax: $variableName.",
        "start_char": 0,
        "end_char": 55
    },
    {
        "question": "What are PHP arrays?",
        "label": "php",
        "language": "en",
        "context": "Arrays in PHP are used to store multiple values in a single variable.",
        "answer": "PHP supports both indexed arrays and associative arrays.",
        "start_char": 0,
        "end_char": 56
    },
    {
        "question": "What is the purpose of the 'include' statement in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'include' statement is used to include the content of one PHP file into another.",
        "answer": "'include' allows for code reuse and modular programming.",
        "start_char": 0,
        "end_char": 56
    },
    {
        "question": "What is the purpose of the 'require' statement in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'require' statement is similar to 'include', but it will produce a fatal error if the file cannot be found.",
        "answer": "'require' is used when the file is essential for the application to run.",
        "start_char": 0,
        "end_char": 72
    },
    {
        "question": "What is a PHP function?",
        "label": "php",
        "language": "en",
        "context": "A function is a block of code that can be reused and executed when called.",
        "answer": "Functions in PHP are defined using the 'function' keyword.",
        "start_char": 0,
        "end_char": 58
    },
    {
        "question": "What is the difference between 'echo' and 'print' in PHP?",
        "label": "php",
        "language": "en",
        "context": "Both 'echo' and 'print' are used to output data to the screen.",
        "answer": "'echo' can take multiple parameters and is faster, while 'print' can only take one argument and returns 1.",
        "start_char": 0,
        "end_char": 106
    },
    {
        "question": "What is the purpose of the 'isset()' function in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'isset()' function checks if a variable is set and is not NULL.",
        "answer": "'isset()' returns true if the variable exists and has a value other than NULL.",
        "start_char": 0,
        "end_char": 78
    },
    {
        "question": "What is the purpose of the 'empty()' function in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'empty()' function checks whether a variable is empty.",
        "answer": "'empty()' returns true if the variable does not exist or its value is considered empty.",
        "start_char": 0,
        "end_char": 87
    },
    {
        "question": "What is the purpose of the 'count()' function in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'count()' function counts all elements in an array or something in an object.",
        "answer": "'count()' returns the number of elements in an array.",
        "start_char": 0,
        "end_char": 53
    },
    {
        "question": "What is a PHP associative array?",
        "label": "php",
        "language": "en",
        "context": "An associative array is an array that uses named keys that you assign to them.",
        "answer": "Associative arrays allow you to store data in key-value pairs.",
        "start_char": 0,
        "end_char": 62
    },
    {
        "question": "What is the purpose of the 'foreach' loop in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'foreach' loop is used to iterate over arrays.",
        "answer": "'foreach' simplifies the process of looping through array elements.",
        "start_char": 0,
        "end_char": 67
    },
    {
        "question": "What is the purpose of the 'switch' statement in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'switch' statement is used to perform different actions based on different conditions.",
        "answer": "'switch' is an alternative to using multiple 'if' statements.",
        "start_char": 0,
        "end_char": 61
    },
    {
        "question": "What is the purpose of the 'return' statement in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'return' statement is used to return a value from a function.",
        "answer": "'return' ends the execution of the function and sends a value back to the caller.",
        "start_char": 0,
        "end_char": 81
    },
    {
        "question": "What is the purpose of the 'require_once' statement in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'require_once' statement includes a file only once during the execution of the script.",
        "answer": "'require_once' prevents redeclaration errors by ensuring the file is included only once.",
        "start_char": 0,
        "end_char": 88
    },
    {
        "question": "What is the purpose of the 'include_once' statement in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'include_once' statement includes a file only once, similar to 'require_once'.",
        "answer": "'include_once' prevents multiple inclusions of the same file.",
        "start_char": 0,
        "end_char": 61
    },
    {
        "question": "What is the purpose of the 'explode()' function in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'explode()' function splits a string by a specified delimiter and returns an array.",
        "answer": "'explode()' is useful for breaking down strings into manageable parts.",
        "start_char": 0,
        "end_char": 70
    },
    {
        "question": "What is the purpose of the 'implode()' function in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'implode()' function joins array elements into a single string using a specified delimiter.",
        "answer": "'implode()' is the opposite of 'explode()'.",
        "start_char": 0,
        "end_char": 43
    },
    {
        "question": "What is the purpose of the 'trim()' function in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'trim()' function removes whitespace from the beginning and end of a string.",
        "answer": "'trim()' is useful for cleaning up user input.",
        "start_char": 0,
        "end_char": 46
    },
    {
        "question": "What is the purpose of the 'substr()' function in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'substr()' function returns a portion of a string specified by the start and length parameters.",
        "answer": "'substr()' is useful for extracting parts of a string.",
        "start_char": 0,
        "end_char": 54
    },
    {
        "question": "What is the purpose of the 'strpos()' function in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'strpos()' function finds the position of the first occurrence of a substring in a string.",
        "answer": "'strpos()' returns the index of the substring or false if not found.",
        "start_char": 0,
        "end_char": 68
    },
    {
        "question": "What is the purpose of the 'str_replace()' function in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'str_replace()' function replaces all occurrences of a search string with a replacement string.",
        "answer": "'str_replace()' is useful for modifying strings.",
        "start_char": 0,
        "end_char": 48
    },
    {
        "question": "What is the purpose of the 'date()' function in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'date()' function formats a local date and time.",
        "answer": "'date()' can be used to display the current date and time in various formats.",
        "start_char": 0,
        "end_char": 77
    },
    {
        "question": "What is the purpose of the 'time()' function in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'time()' function returns the current Unix timestamp.",
        "answer": "'time()' is useful for working with date and time calculations.",
        "start_char": 0,
        "end_char": 63
    },
    {
        "question": "What is the purpose of the 'json_encode()' function in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'json_encode()' function converts a PHP array or object into a JSON string.",
        "answer": "'json_encode()' is useful for sending data to JavaScript or APIs.",
        "start_char": 0,
        "end_char": 65
    },
    {
        "question": "What is the purpose of the 'json_decode()' function in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'json_decode()' function converts a JSON string into a PHP variable.",
        "answer": "'json_decode()' is useful for processing data received from APIs.",
        "start_char": 0,
        "end_char": 65
    },
    {
        "question": "What is the purpose of the 'mysqli_connect()' function in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'mysqli_connect()' function establishes a connection to a MySQL database.",
        "answer": "'mysqli_connect()' returns a connection object or false on failure.",
        "start_char": 0,
        "end_char": 67
    },
    {
        "question": "What is the purpose of the 'mysqli_query()' function in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'mysqli_query()' function performs a query against a database.",
        "answer": "'mysqli_query()' can be used for SELECT, INSERT, UPDATE, and DELETE operations.",
        "start_char": 0,
        "end_char": 79
    },
    {
        "question": "What is the purpose of the 'mysqli_fetch_assoc()' function in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'mysqli_fetch_assoc()' function fetches a result row as an associative array.",
        "answer": "'mysqli_fetch_assoc()' is useful for retrieving data from a query result.",
        "start_char": 0,
        "end_char": 73
    },
    {
        "question": "What is the purpose of the 'mysqli_close()' function in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'mysqli_close()' function closes a previously opened database connection.",
        "answer": "'mysqli_close()' is important for freeing up resources.",
        "start_char": 0,
        "end_char": 55
    },
    {
        "question": "What is the purpose of the 'PDO' class in PHP?",
        "label": "php",
        "language": "en",
        "context": "PDO (PHP Data Objects) is a database access layer providing a uniform method of access to multiple databases.",
        "answer": "PDO allows for prepared statements and helps prevent SQL injection.",
        "start_char": 0,
        "end_char": 67
    },
    {
        "question": "What is the purpose of the 'try-catch' block in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'try-catch' block is used to handle exceptions in PHP.",
        "answer": "Code that may throw an exception is placed in the 'try' block, while the 'catch' block handles the exception.",
        "start_char": 0,
        "end_char": 109
    },
    {
        "question": "What is the purpose of the 'throw' statement in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'throw' statement is used to raise an exception.",
        "answer": "'throw' can be used to signal an error condition in a method.",
        "start_char": 0,
        "end_char": 61
    },
    {
        "question": "What is the purpose of the 'finally' block in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'finally' block is used to execute code after the 'try' and 'catch' blocks, regardless of whether an exception was thrown.",
        "answer": "'finally' is typically used for cleanup code, such as closing files or releasing resources.",
        "start_char": 0,
        "end_char": 91
    },
    {
        "question": "What is the purpose of the 'namespace' keyword in PHP?",
        "label": "php",
        "language": "en",
        "context": "Namespaces are a way of encapsulating items so that same names can be reused in different contexts.",
        "answer": "Namespaces help avoid name collisions in larger applications.",
        "start_char": 0,
        "end_char": 61
    },
    {
        "question": "What is the purpose of the 'use' keyword in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'use' keyword is used to import classes, functions, or constants from a namespace.",
        "answer": "'use' simplifies the code by allowing shorter names for classes.",
        "start_char": 0,
        "end_char": 64
    },
    {
        "question": "What is the purpose of the 'trait' keyword in PHP?",
        "label": "php",
        "language": "en",
        "context": "Traits are a mechanism for code reuse in single inheritance languages like PHP.",
        "answer": "Traits allow you to include methods in multiple classes without inheritance.",
        "start_char": 0,
        "end_char": 76
    },
    {
        "question": "What is the purpose of the 'final' keyword in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'final' keyword is used to prevent class inheritance or method overriding.",
        "answer": "Final classes cannot be extended, and final methods cannot be overridden.",
        "start_char": 0,
        "end_char": 73
    },
    {
        "question": "What is the purpose of the 'abstract' keyword in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'abstract' keyword is used to declare a class that cannot be instantiated or a method that must be implemented by derived classes.",
        "answer": "Abstract classes provide a base for other classes to extend.",
        "start_char": 0,
        "end_char": 60
    },
    {
        "question": "What is the purpose of the 'static' keyword in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'static keyword is used to declare class properties or methods that belong to the class itself rather than to instances of the class.",
        "answer": "Static members can be accessed without creating an instance of the class.",
        "start_char": 0,
        "end_char": 73
    },
    {
        "question": "What is the purpose of the 'public' keyword in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'public' keyword is an access modifier that allows class members to be accessible from anywhere.",
        "answer": "Public members can be accessed from outside the class.",
        "start_char": 0,
        "end_char": 54
    },
    {
        "question": "What is the purpose of the 'private' keyword in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'private' keyword restricts access to class members to the class itself.",
        "answer": "Private members cannot be accessed from outside the class.",
        "start_char": 0,
        "end_char": 58
    },
    {
        "question": "What is the purpose of the 'protected' keyword in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'protected' keyword allows access to class members within the class and by derived classes.",
        "answer": "Protected members cannot be accessed from outside the class hierarchy.",
        "start_char": 0,
        "end_char": 70
    },
    {
        "question": "What is the purpose of the 'clone' keyword in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'clone' keyword is used to create a copy of an object.",
        "answer": "Cloning an object creates a new instance with the same properties.",
        "start_char": 0,
        "end_char": 66
    },
    {
        "question": "What is the purpose of the 'instanceof' operator in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'instanceof' operator checks if an object is an instance of a specific class or interface.",
        "answer": "'instanceof' returns true if the object is of the specified type.",
        "start_char": 0,
        "end_char": 65
    },
    {
        "question": "What is the purpose of the 'serialize()' function in PHP?",
        "label": "php",
        "language": "en",
        "context": "The 'serialize()' function converts a value into a storable representation.",
        "answer": "Serialization is useful for storing complex data structures in a database.",
        "start_char": 0,
        "end_char": 74
    },
    {
        "question": "What is Android?",
        "label": "android",
        "language": "en",
        "context": "Android is an open-source operating system based on the Linux kernel, designed primarily for touchscreen mobile devices.",
        "answer": "Android is developed by Google and is used on a wide range of devices, including smartphones and tablets.",
        "start_char": 0,
        "end_char": 105
    },
    {
        "question": "What is the Android SDK?",
        "label": "android",
        "language": "en",
        "context": "The Android Software Development Kit (SDK) is a set of tools that allows developers to create applications for the Android platform.",
        "answer": "The SDK includes libraries, a debugger, an emulator, and documentation.",
        "start_char": 0,
        "end_char": 71
    },
    {
        "question": "What is an Activity in Android?",
        "label": "android",
        "language": "en",
        "context": "An Activity is a single, focused thing that a user can do in an Android application.",
        "answer": "Activities provide the user interface for the application.",
        "start_char": 0,
        "end_char": 58
    },
    {
        "question": "What is a Fragment in Android?",
        "label": "android",
        "language": "en",
        "context": "A Fragment is a reusable portion of the user interface in an Activity.",
        "answer": "Fragments can be combined to create multi-pane user interfaces.",
        "start_char": 0,
        "end_char": 63
    },
    {
        "question": "What is an Intent in Android?",
        "label": "android",
        "language": "en",
        "context": "An Intent is a messaging object used to request an action from another app component.",
        "answer": "Intents can be used to start activities, send broadcasts, or communicate with services.",
        "start_char": 0,
        "end_char": 87
    },
    {
        "question": "What is a Service in Android?",
        "label": "android",
        "language": "en",
        "context": "A Service is a component that runs in the background to perform long-running operations.",
        "answer": "Services do not provide a user interface and can run even when the application is not in the foreground.",
        "start_char": 0,
        "end_char": 104
    },
    {
        "question": "What is a Broadcast Receiver in Android?",
        "label": "android",
        "language": "en",
        "context": "A Broadcast Receiver is a component that responds to system-wide broadcast announcements.",
        "answer": "Broadcast Receivers allow applications to listen for and respond to events such as incoming calls or battery status changes.",
        "start_char": 0,
        "end_char": 124
    },
    {
        "question": "What is a Content Provider in Android?",
        "label": "android",
        "language": "en",
        "context": "A Content Provider manages access to a structured set of data and allows data sharing between applications.",
        "answer": "Content Providers are used to store and retrieve data from databases or files.",
        "start_char": 0,
        "end_char": 78
    },
    {
        "question": "What is the Android Manifest file?",
        "label": "android",
        "language": "en",
        "context": "The AndroidManifest.xml file contains essential information about the application.",
        "answer": "It declares components, permissions, and other configuration details.",
        "start_char": 0,
        "end_char": 69
    },
    {
        "question": "What is an APK in Android?",
        "label": "android",
        "language": "en",
        "context": "An APK (Android Package Kit) is the file format used to distribute and install applications on Android devices.",
        "answer": "APK files contain all the necessary components for an Android application.",
        "start_char": 0,
        "end_char": 74
    },
    {
        "question": "What is the difference between dp and px in Android?",
        "label": "android",
        "language": "en",
        "context": "dp (density-independent pixels) and px (pixels) are units of measurement for screen dimensions.",
        "answer": "dp is used for layout design to ensure consistent sizing across different screen densities, while px is an absolute pixel measurement.",
        "start_char": 0,
        "end_char": 134
    },
    {
        "question": "What is the purpose of the onCreate() method in an Activity?",
        "label": "android",
        "language": "en",
        "context": "The onCreate() method is called when the Activity is first created.",
        "answer": "It is used to perform one-time initialization such as setting up the user interface.",
        "start_char": 0,
        "end_char": 84
    },
    {
        "question": "What is the purpose of the onResume() method in an Activity?",
        "label": "android",
        "language": "en",
        "context": "The onResume() method is called when the Activity becomes visible to the user.",
        "answer": "It is used to start any processes that should occur when the Activity is in the foreground.",
        "start_char": 0,
        "end_char": 91
    },
    {
        "question": "What is the purpose of the onPause() method in an Activity?",
        "label": "android",
        "language": "en",
        "context": "The onPause() method is called when the Activity is partially obscured or about to be stopped.",
        "answer": "It is used to pause ongoing processes and save data.",
        "start_char": 0,
        "end_char": 52
    },
    {
        "question": "What is the purpose of the onDestroy() method in an Activity?",
        "label": "android",
        "language": "en",
        "context": "The onDestroy() method is called before the Activity is destroyed.",
        "answer": "It is used to clean up resources and perform final cleanup.",
        "start_char": 0,
        "end_char": 59
    },
    {
        "question": "What is a RecyclerView in Android?",
        "label": "android",
        "language": "en",
        "context": "RecyclerView is a more advanced and flexible version of ListView for displaying large data sets.",
        "answer": "It provides a way to efficiently display and manage large lists of data.",
        "start_char": 0,
        "end_char": 72
    },
    {
        "question": "What is a ViewGroup in Android?",
        "label": "android",
        "language": "en",
        "context": "A ViewGroup is a special view that can contain other views (children).",
        "answer": "ViewGroups are used to create layouts and manage the positioning of child views.",
        "start_char": 0,
        "end_char": 80
    },
    {
        "question": "What is the purpose of the LayoutInflater in Android?",
        "label": "android",
        "language": "en",
        "context": "LayoutInflater is used to instantiate layout XML files into their corresponding View objects.",
        "answer": "It allows you to create views from XML layout files.",
        "start_char": 0,
        "end_char": 52
    },
    {
        "question": "What is the purpose of the findViewById() method in Android?",
        "label": "android",
        "language": "en",
        "context": "The findViewById() method is used to retrieve a view by its ID.",
        "answer": "It allows you to access and manipulate UI elements defined in XML.",
        "start_char": 0,
        "end_char": 66
    },
    {
        "question": "What is the purpose of the Toast class in Android?",
        "label": "android",
        "language": "en",
        "context": "The Toast class is used to display brief messages to the user.",
        "answer": "Toasts are non-intrusive and automatically disappear after a short duration.",
        "start_char": 0,
        "end_char": 76
    },
    {
        "question": "What is the purpose of the AlertDialog class in Android?",
        "label": "android",
        "language": "en",
        "context": "The AlertDialog class is used to create dialog boxes that can display messages and prompt user actions.",
        "answer": "AlertDialogs can include buttons for user interaction.",
        "start_char": 0,
        "end_char": 54
    },
    {
        "question": "What is the purpose of the SharedPreferences in Android?",
        "label": "android",
        "language": "en",
        "context": "SharedPreferences is used to store small amounts of primitive data as key-value pairs.",
        "answer": "It is commonly used for saving user preferences and settings.",
        "start_char": 0,
        "end_char": 61
    },
    {
        "question": "What is the purpose of the SQLite database in Android?",
        "label": "android",
        "language": "en",
        "context": "SQLite is a lightweight database engine that is embedded in Android.",
        "answer": "It is used for storing structured data in a local database.",
        "start_char": 0,
        "end_char": 59
    },
    {
        "question": "What is the purpose of the ContentResolver in Android?",
        "label": "android",
        "language": "en",
        "context": "ContentResolver is used to access data from Content Providers.",
        "answer": "It provides a way to query, insert, update, and delete data.",
        "start_char": 0,
        "end_char": 60
    },
    {
        "question": "What is the purpose of the Android Emulator?",
        "label": "android",
        "language": "en",
        "context": "The Android Emulator simulates an Android device on your computer.",
        "answer": "It allows developers to test applications without needing a physical device.",
        "start_char": 0,
        "end_char": 76
    },
    {
        "question": "What is the purpose of Gradle in Android development?",
        "label": "android",
        "language": "en",
        "context": "Gradle is a build automation tool used in Android development.",
        "answer": "It manages dependencies and builds the application.",
        "start_char": 0,
        "end_char": 51
    },
    {
        "question": "What is the purpose of the Android Architecture Components?",
        "label": "android",
        "language": "en",
        "context": "Android Architecture Components are a collection of libraries that help design robust, testable, and maintainable apps.",
        "answer": "They provide components like LiveData, ViewModel, and Room for better app architecture.",
        "start_char": 0,
        "end_char": 87
    },
    {
        "question": "What is LiveData in Android?",
        "label": "android",
        "language": "en",
        "context": "LiveData is a lifecycle-aware data holder that can be observed.",
        "answer": "It allows UI components to observe changes in data and update automatically.",
        "start_char": 0,
        "end_char": 76
    },
    {
        "question": "What is ViewModel in Android?",
        "label": "android",
        "language": "en",
        "context": "ViewModel is a class that is designed to store and manage UI-related data in a lifecycle-conscious way.",
        "answer": "It survives configuration changes such as screen rotations.",
        "start_char": 0,
        "end_char": 59
    },
    {
        "question": "What is Room in Android?",
        "label": "android",
        "language": "en",
        "context": "Room is a persistence library that provides an abstraction layer over SQLite.",
        "answer": "It simplifies database access and provides compile-time checks of SQL queries.",
        "start_char": 0,
        "end_char": 78
    },
    {
        "question": "What is Retrofit in Android?",
        "label": "android",
        "language": "en",
        "context": "Retrofit is a type-safe HTTP client for Android and Java.",
        "answer": "It simplifies the process of making network requests and handling responses.",
        "start_char": 0,
        "end_char": 76
    },
    {
        "question": "What is the purpose of the Glide library in Android?",
        "label": "android",
        "language": "en",
        "context": "Glide is an image loading and caching library for Android.",
        "answer": "It helps in loading images efficiently from various sources.",
        "start_char": 0,
        "end_char": 60
    },
    {
        "question": "What is the purpose of the Dagger library in Android?",
        "label": "android",
        "language": "en",
        "context": "Dagger is a dependency injection framework for Java and Android.",
        "answer": "It helps manage dependencies and promotes loose coupling in applications.",
        "start_char": 0,
        "end_char": 73
    },
    {
        "question": "What is the purpose of the Kotlin programming language in Android development?",
        "label": "android",
        "language": "en",
        "context": "Kotlin is a modern programming language that is fully interoperable with Java.",
        "answer": "It offers concise syntax and improved safety features for Android development.",
        "start_char": 0,
        "end_char": 78
    },
    {
        "question": "What is the purpose of the Android Jetpack?",
        "label": "android",
        "language": "en",
        "context": "Android Jetpack is a set of libraries, tools, and guidance to help developers build high-quality apps.",
        "answer": "It simplifies app development and helps follow best practices.",
        "start_char": 0,
        "end_char": 62
    },
    {
        "question": "What is the purpose of the ConstraintLayout in Android?",
        "label": "android",
        "language": "en",
        "context": "ConstraintLayout is a flexible layout that allows you to create complex layouts with a flat view hierarchy.",
        "answer": "It helps in designing responsive UIs that adapt to different screen sizes.",
        "start_char": 0,
        "end_char": 74
    },
    {
        "question": "What is the purpose of the Navigation component in Android?",
        "label": "android",
        "language": "en",
        "context": "The Navigation component helps manage app navigation within Android applications.",
        "answer": "It simplifies the implementation of navigation patterns and transitions.",
        "start_char": 0,
        "end_char": 72
    },
    {
        "question": "What is the purpose of the WorkManager in Android?",
        "label": "android",
        "language": "en",
        "context": "WorkManager is a library for managing background tasks in Android.",
        "answer": "It provides a simple and flexible API for scheduling deferrable work.",
        "start_char": 0,
        "end_char": 69
    },
    {
        "question": "What is the purpose of the Firebase in Android development?",
        "label": "android",
        "language": "en",
        "context": "Firebase is a platform developed by Google for creating mobile and web applications.",
        "answer": "It provides various services like authentication, real-time database, and cloud storage.",
        "start_char": 0,
        "end_char": 88
    },
    {
        "question": "What is the purpose of the Android NDK?",
        "label": "android",
        "language": "en",
        "context": "The Android Native Development Kit (NDK) allows developers to implement parts of their app using native-code languages.",
        "answer": "It is used for performance-critical tasks and to reuse existing C/C++ code.",
        "start_char": 0,
        "end_char": 75
    },
    {
        "question": "What is the purpose of the Android Jetpack Compose?",
        "label": "android",
        "language": "en",
        "context": "Jetpack Compose is a modern toolkit for building native UI in Android.",
        "answer": "It simplifies UI development with a declarative approach.",
        "start_char": 0,
        "end_char": 57
    },
    {
        "question": "What is the purpose of the Android Security Library?",
        "label": "android",
        "language": "en",
        "context": "The Android Security Library provides tools and APIs for securing Android applications.",
        "answer": "It helps in implementing security best practices and protecting user data.",
        "start_char": 0,
        "end_char": 74
    },
    {
        "question": "What is the purpose of the Android Accessibility features?",
        "label": "android",
        "language": "en",
        "context": "Android Accessibility features help make apps usable for people with disabilities.",
        "answer": "They provide tools for developers to enhance app accessibility.",
        "start_char": 0,
        "end_char": 63
    },
    {
        "question": "What is the purpose of the Android Testing Support Library?",
        "label": "android",
        "language": "en",
        "context": "The Android Testing Support Library provides tools for testing Android applications.",
        "answer": "It includes APIs for unit testing, UI testing, and integration testing.",
        "start_char": 0,
        "end_char": 71
    },
    {
        "question": "What is the purpose of the Android Profiler?",
        "label": "android",
        "language": "en",
        "context": "The Android Profiler is a tool for monitoring the performance of Android applications.",
        "answer": "It helps in analyzing CPU, memory, network, and energy usage.",
        "start_char": 0,
        "end_char": 61
    },
    {
        "question": "What is the purpose of the Android Lint tool?",
        "label": "android",
        "language": "en",
        "context": "Android Lint is a static code analysis tool that helps identify potential bugs and optimization improvements.",
        "answer": "It provides suggestions for improving code quality and performance.",
        "start_char": 0,
        "end_char": 67
    },
    {
        "question": "What is the purpose of the Android Studio IDE?",
        "label": "android",
        "language": "en",
        "context": " Android Studio is the official integrated development environment (IDE) for Android app development.",
        "answer": "It provides tools for coding, debugging, and testing Android applications.",
        "start_char": 0,
        "end_char": 74
    },
    {
        "question": "What is the purpose of the Android Virtual Device (AVD)?",
        "label": "android",
        "language": "en",
        "context": "An Android Virtual Device (AVD) is an emulator configuration that allows you to run Android apps on your computer.",
        "answer": "AVDs simulate various Android devices for testing applications.",
        "start_char": 0,
        "end_char": 63
    },
    {
        "question": "What is the purpose of the Android Resource system?",
        "label": "android",
        "language": "en",
        "context": "The Android Resource system manages various types of resources used in applications.",
        "answer": "It allows developers to define and access resources like strings, layouts, and images.",
        "start_char": 0,
        "end_char": 86
    },
    {
        "question": "What is the purpose of the Android Gradle Plugin?",
        "label": "android",
        "language": "en",
        "context": "The Android Gradle Plugin is used to build Android applications using Gradle.",
        "answer": "It provides the necessary tools and configurations for building and packaging Android apps.",
        "start_char": 0,
        "end_char": 91
    },
    {
        "question": "What does HTML stand for?",
        "label": "html",
        "language": "en",
        "context": "HTML is the standard markup language for creating web pages.",
        "answer": "HTML stands for HyperText Markup Language.",
        "start_char": 0,
        "end_char": 42
    },
    {
        "question": "What is the purpose of HTML?",
        "label": "html",
        "language": "en",
        "context": "HTML is used to structure content on the web.",
        "answer": "HTML defines the structure and layout of a web page using markup.",
        "start_char": 0,
        "end_char": 65
    },
    {
        "question": "What is an HTML element?",
        "label": "html",
        "language": "en",
        "context": "An HTML element is a part of an HTML document that defines a specific piece of content.",
        "answer": "An HTML element consists of a start tag, content, and an end tag.",
        "start_char": 0,
        "end_char": 65
    },
    {
        "question": "What is the basic structure of an HTML document?",
        "label": "html",
        "language": "en",
        "context": "An HTML document has a specific structure that includes several key elements.",
        "answer": "The basic structure includes <!DOCTYPE html>, <html>, <head>, and <body> tags.",
        "start_char": 0,
        "end_char": 78
    },
    {
        "question": "What is the purpose of the <head> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <head> tag contains meta-information about the HTML document.",
        "answer": "It can include the title, links to stylesheets, and scripts.",
        "start_char": 0,
        "end_char": 60
    },
    {
        "question": "What is the purpose of the <title> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <title> tag defines the title of the HTML document.",
        "answer": "The title is displayed in the browser's title bar or tab.",
        "start_char": 0,
        "end_char": 57
    },
    {
        "question": "What is the purpose of the <body> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <body> tag contains the content of the HTML document.",
        "answer": "It includes text, images, links, and other media that are displayed on the web page.",
        "start_char": 0,
        "end_char": 84
    },
    {
        "question": "What is a hyperlink in HTML?",
        "label": "html",
        "language": "en",
        "context": "A hyperlink is a clickable link that navigates to another web page or resource.",
        "answer": "Hyperlinks are created using the <a> tag with the href attribute.",
        "start_char": 0,
        "end_char": 65
    },
    {
        "question": "What is the purpose of the <img> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <img> tag is used to embed images in an HTML document.",
        "answer": "It requires the src attribute to specify the image source.",
        "start_char": 0,
        "end_char": 58
    },
    {
        "question": "What is the purpose of the <ul> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <ul> tag defines an unordered list in HTML.",
        "answer": "It is used to create a list of items with bullet points.",
        "start_char": 0,
        "end_char": 56
    },
    {
        "question": "What is the purpose of the <ol> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <ol> tag defines an ordered list in HTML.",
        "answer": "It is used to create a list of items with numbered points.",
        "start_char": 0,
        "end_char": 58
    },
    {
        "question": "What is the purpose of the <li> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <li> tag defines a list item in both ordered and unordered lists.",
        "answer": "It is used to represent individual items within a list.",
        "start_char": 0,
        "end_char": 55
    },
    {
        "question": "What is the purpose of the <div> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <div> tag is a block-level element used to group content.",
        "answer": "It is commonly used for layout and styling purposes.",
        "start_char": 0,
        "end_char": 52
    },
    {
        "question": "What is the purpose of the <span> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <span> tag is an inline element used to group text or other inline elements.",
        "answer": "It is often used for styling a specific portion of text.",
        "start_char": 0,
        "end_char": 56
    },
    {
        "question": "What is the purpose of the <form> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <form> tag is used to create an HTML form for user input.",
        "answer": "It can contain various input elements like text fields, checkboxes, and buttons.",
        "start_char": 0,
        "end_char": 80
    },
    {
        "question": "What is the purpose of the <input> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <input> tag is used to create interactive controls in a form.",
        "answer": "It can be used for various types of input, such as text, password, checkbox, and radio.",
        "start_char": 0,
        "end_char": 87
    },
    {
        "question": "What is the purpose of the <button> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <button> tag is used to create a clickable button in a form.",
        "answer": "It can trigger actions when clicked, such as submitting a form.",
        "start_char": 0,
        "end_char": 63
    },
    {
        "question": "What is the purpose of the <label> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <label> tag is used to define a label for an <input> element.",
        "answer": "It improves accessibility and usability by associating text with form controls.",
        "start_char": 0,
        "end_char": 79
    },
    {
        "question": "What is the purpose of the <select> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <select> tag is used to create a drop-down list in a form.",
        "answer": "It allows users to select one or more options from a list.",
        "start_char": 0,
        "end_char": 58
    },
    {
        "question": "What is the purpose of the <option> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <option> tag defines an option in a drop-down list created by the <select> tag.",
        "answer": "It represents individual choices within the drop-down.",
        "start_char": 0,
        "end_char": 54
    },
    {
        "question": "What is the purpose of the <textarea> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <textarea> tag is used to create a multi-line text input field.",
        "answer": "It allows users to enter larger amounts of text.",
        "start_char": 0,
        "end_char": 48
    },
    {
        "question": "What is the purpose of the <header> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <header> tag represents introductory content for a section or page.",
        "answer": "It typically contains headings, logos, and navigation links.",
        "start_char": 0,
        "end_char": 60
    },
    {
        "question": "What is the purpose of the <footer> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <footer> tag represents the footer of a section or page.",
        "answer": "It usually contains copyright information, links, and contact details.",
        "start_char": 0,
        "end_char": 70
    },
    {
        "question": "What is the purpose of the <article> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <article> tag represents a self-contained piece of content.",
        "answer": "It is used for blog posts, news articles, or any independent content.",
        "start_char": 0,
        "end_char": 69
    },
    {
        "question": "What is the purpose of the <section> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <section> tag represents a thematic grouping of content.",
        "answer": "It is used to divide content into logical sections.",
        "start_char": 0,
        "end_char": 51
    },
    {
        "question": "What is the purpose of the <nav> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <nav> tag is used to define a navigation section in a document.",
        "answer": "It typically contains links to other pages or sections of the site.",
        "start_char": 0,
        "end_char": 67
    },
    {
        "question": "What is the purpose of the <main> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <main> tag represents the main content of the document.",
        "answer": "It is used to encapsulate the primary content of the page.",
        "start_char": 0,
        "end_char": 58
    },
    {
        "question": "What is the purpose of the <figure> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <figure> tag is used to encapsulate media content along with its caption.",
        "answer": "It is often used for images, diagrams, or illustrations.",
        "start_char": 0,
        "end_char": 56
    },
    {
        "question": "What is the purpose of the <figcaption> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <figcaption> tag is used to provide a caption for a <figure> element.",
        "answer": "It describes the content of the figure.",
        "start_char": 0,
        "end_char": 39
    },
    {
        "question": "What is the purpose of the <blockquote> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <blockquote> tag is used to define a section that is quoted from another source.",
        "answer": "It typically displays a block of quoted text.",
        "start_char": 0,
        "end_char": 45
    },
    {
        "question": "What is the purpose of the <cite> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <cite > tag is used to reference the title of a creative work.",
        "answer": "It is often used for citing books, articles, or other works.",
        "start_char": 0,
        "end_char": 60
    },
    {
        "question": "What is the purpose of the <code> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <code> tag is used to define a piece of computer code.",
        "answer": "It typically displays code snippets in a monospace font.",
        "start_char": 0,
        "end_char": 56
    },
    {
        "question": "What is the purpose of the <pre> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <pre> tag is used to display preformatted text.",
        "answer": "It preserves both spaces and line breaks in the text.",
        "start_char": 0,
        "end_char": 53
    },
    {
        "question": "What is the purpose of the <strong> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <strong> tag is used to indicate that text is of strong importance.",
        "answer": "It typically renders the text in bold.",
        "start_char": 0,
        "end_char": 38
    },
    {
        "question": "What is the purpose of the <em> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <em> tag is used to emphasize text.",
        "answer": "It usually renders the text in italics.",
        "start_char": 0,
        "end_char": 39
    },
    {
        "question": "What is the purpose of the <small> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <small> tag is used to render text in a smaller font size.",
        "answer": "It is often used for fine print or disclaimers.",
        "start_char": 0,
        "end_char": 47
    },
    {
        "question": "What is the purpose of the <hr> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <hr> tag is used to create a thematic break in the content.",
        "answer": "It typically renders as a horizontal line.",
        "start_char": 0,
        "end_char": 42
    },
    {
        "question": "What is the purpose of the <br> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <br> tag is used to insert a line break in the text.",
        "answer": "It allows text to continue on the next line.",
        "start_char": 0,
        "end_char": 44
    },
    {
        "question": "What is the purpose of the <meta> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <meta> tag provides metadata about the HTML document.",
        "answer": "It can include information like character set, author, and viewport settings.",
        "start_char": 0,
        "end_char": 77
    },
    {
        "question": "What is the purpose of the <link> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <link> tag is used to link external resources to the HTML document.",
        "answer": "It is commonly used to link stylesheets.",
        "start_char": 0,
        "end_char": 40
    },
    {
        "question": "What is the purpose of the <script> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <script> tag is used to embed or reference JavaScript code.",
        "answer": "It allows for dynamic content and interactivity on web pages.",
        "start_char": 0,
        "end_char": 61
    },
    {
        "question": "What is the purpose of the <style> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <style> tag is used to define internal CSS styles for the document.",
        "answer": "It allows for styling of HTML elements directly within the document.",
        "start_char": 0,
        "end_char": 68
    },
    {
        "question": "What is the purpose of the <noscript> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <noscript> tag is used to provide alternative content for users with disabled JavaScript.",
        "answer": "It displays content when JavaScript is not supported or disabled.",
        "start_char": 0,
        "end_char": 65
    },
    {
        "question": "What is the purpose of the <canvas> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <canvas> tag is used to draw graphics on the fly via JavaScript.",
        "answer": "It allows for dynamic, scriptable rendering of 2D shapes and images.",
        "start_char": 0,
        "end_char": 68
    },
    {
        "question": "What is the purpose of the <svg> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <svg> tag is used to define vector-based graphics in XML format.",
        "answer": "It allows for scalable graphics that can be manipulated via CSS and JavaScript.",
        "start_char": 0,
        "end_char": 79
    },
    {
        "question": "What is the purpose of the <audio> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <audio> tag is used to embed audio content in a web page.",
        "answer": "It allows for playback of audio files such as MP3 or WAV.",
        "start_char": 0,
        "end_char": 57
    },
    {
        "question": "What is the purpose of the <video> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <video> tag is used to embed video content in a web page.",
        "answer": "It supports various video formats and provides controls for playback.",
        "start_char": 0,
        "end_char": 69
    },
    {
        "question": "What is the purpose of the <source> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <source> tag is used to specify multiple media resources for elements like <audio> and <video>.",
        "answer": "It allows the browser to choose the best format to play.",
        "start_char": 0,
        "end_char": 56
    },
    {
        "question": "What is the purpose of the <track> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <track> tag is used to specify text tracks for <video> and <audio> elements.",
        "answer": "It is commonly used for subtitles or captions.",
        "start_char": 0,
        "end_char": 46
    },
    {
        "question": "What is the purpose of the <map> tag in HTML?",
        "label": "html",
        "language": "en",
        "context": "The <map> tag is used to define an image map, which is a clickable area on an image.",
        "answer": "It allows for interactive regions within an image.",
        "start_char": 0,
        "end_char": 50
    },
    {
        "question": "What is jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "jQuery is a fast, small, and feature-rich JavaScript library.",
        "answer": "jQuery simplifies HTML document traversal and manipulation, event handling, and animation.",
        "start_char": 0,
        "end_char": 90
    },
    {
        "question": "What is the purpose of the jQuery library?",
        "label": "jquery",
        "language": "en",
        "context": "jQuery is designed to make it easier to work with JavaScript and HTML.",
        "answer": "It provides a simple API that works across a multitude of browsers.",
        "start_char": 0,
        "end_char": 67
    },
    {
        "question": "How do you include jQuery in your web page?",
        "label": "jquery",
        "language": "en",
        "context": "jQuery can be included in a web page using a <script> tag.",
        "answer": "You can include jQuery by linking to a CDN or downloading the library and referencing it locally.",
        "start_char": 0,
        "end_char": 97
    },
    {
        "question": "What is the jQuery syntax?",
        "label": "jquery",
        "language": "en",
        "context": "jQuery uses a specific syntax to select elements and perform actions.",
        "answer": "The basic syntax is: $(selector).action();  where 'selector' is the HTML element.",
        "start_char": 0,
        "end_char": 81
    },
    {
        "question": "What does the $ symbol represent in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The $ symbol is a shorthand for the jQuery function.",
        "answer": "$ is used to access jQuery methods and select elements.",
        "start_char": 0,
        "end_char": 55
    },
    {
        "question": "What is a jQuery selector?",
        "label": "jquery",
        "language": "en",
        "context": "A jQuery selector is used to select HTML elements based on their attributes.",
        "answer": "Selectors can be based on element type, class, ID, and more.",
        "start_char": 0,
        "end_char": 60
    },
    {
        "question": "What is the purpose of the .ready() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .ready() method is used to execute code when the DOM is fully loaded.",
        "answer": "$(document).ready(function() { ... }); ensures that the code runs after the document is ready.",
        "start_char": 0,
        "end_char": 94
    },
    {
        "question": "How do you hide an element using jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "jQuery provides methods to manipulate the visibility of elements.",
        "answer": "You can hide an element using the .hide() method: $('#elementID').hide();",
        "start_char": 0,
        "end_char": 73
    },
    {
        "question": "How do you show a hidden element using jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "jQuery allows you to show hidden elements easily.",
        "answer": "You can show a hidden element using the .show() method: $('#elementID').show();",
        "start_char": 0,
        "end_char": 79
    },
    {
        "question": "What is the purpose of the .css() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .css() method is used to get or set the CSS properties of an element.",
        "answer": "$('#elementID').css('color', 'red'); changes the text color to red.",
        "start_char": 0,
        "end_char": 67
    },
    {
        "question": "How do you add a class to an element using jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "jQuery provides methods to manipulate classes of elements.",
        "answer": "You can add a class using the .addClass() method: $('#elementID').addClass('newClass');",
        "start_char": 0,
        "end_char": 87
    },
    {
        "question": "How do you remove a class from an element using jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "jQuery allows you to remove classes from elements easily.",
        "answer": "You can remove a class using the .removeClass() method: $('#elementID').removeClass('oldClass');",
        "start_char": 0,
        "end_char": 96
    },
    {
        "question": "What is the purpose of the .html() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .html() method is used to get or set the HTML content of an element.",
        "answer": "$('#elementID').html('<p>New Content</p>'); sets the HTML content of the element.",
        "start_char": 0,
        "end_char": 81
    },
    {
        "question": "What is the purpose of the .text() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .text() method is used to get or set the text content of an element.",
        "answer": "$('#elementID').text('New Text'); sets the text content of the element.",
        "start_char": 0,
        "end_char": 71
    },
    {
        "question": "How do you append content to an element using jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "jQuery provides methods to manipulate the DOM by adding content.",
        "answer": "You can append content using the .append() method: $('#elementID').append('<p>New Paragraph</p>');",
        "start_char": 0,
        "end_char": 98
    },
    {
        "question": "How do you prepend content to an element using jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "jQuery allows you to add content at the beginning of an element.",
        "answer": "You can prepend content using the .prepend() method: $('#elementID').prepend('<p>New Paragraph</p>');",
        "start_char": 0,
        "end_char": 101
    },
    {
        "question": "What is the purpose of the .remove() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .remove() method is used to remove elements from the DOM.",
        "answer": "$('#elementID').remove(); removes the specified element from the document.",
        "start_char": 0,
        "end_char": 74
    },
    {
        "question": "What is the purpose of the .fadeIn() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .fadeIn() method gradually changes the opacity of an element to make it visible.",
        "answer": "$('#elementID').fadeIn(); fades in the specified element.",
        "start_char": 0,
        "end_char": 57
    },
    {
        "question": "What is the purpose of the .fadeOut() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .fadeOut() method gradually changes the opacity of an element to make it invisible.",
        "answer": "$('#elementID').fadeOut(); fades out the specified element.",
        "start_char": 0,
        "end_char": 59
    },
    {
        "question": "What is the purpose of the .slideUp() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .slideUp() method hides an element with a sliding motion.",
        "answer": "$('#elementID').slideUp(); slides up the specified element.",
        "start_char": 0,
        "end_char": 59
    },
    {
        "question": "What is the purpose of the .slideDown() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .slideDown() method shows an element with a sliding motion.",
        "answer": "$('#elementID').slideDown(); slides down the specified element.",
        "start_char": 0,
        "end_char": 63
    },
    {
        "question": "What is the purpose of the .animate() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .animate() method is used to create custom animations on CSS properties.",
        "answer": "$('#elementID').animate({ opacity: 0.5 }, 1000); animates the opacity to 0.5 over 1 second.",
        "start_char": 0,
        "end_char": 91
    },
    {
        "question": "What is the purpose of the .on() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .on() method is used to attach event handlers to elements.",
        "answer": "$('#elementID').on('click', function() { ... }); attaches a click event handler.",
        "start_char": 0,
        "end_char": 80
    },
    {
        "question": "What is the purpose of the .off() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .off() method is used to remove event handlers from elements.",
        "answer": "$('#elementID').off('click'); removes the click event handler.",
        "start_char": 0,
        "end_char": 62
    },
    {
        "question": "What is the purpose of the .trigger() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .trigger() method is used to trigger an event on an element.",
        "answer": "$('#elementID').trigger('click'); programmatically triggers a click event.",
        "start_char": 0,
        "end_char": 74
    },
    {
        "question": "What is the purpose of the .val() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .val() method is used to get or set the value of form elements.",
        "answer": "$('#inputID').val('New Value'); sets the value of an input element.",
        "start_char": 0,
        "end_char": 67
    },
    {
        "question": "What is the purpose of the .css() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .css() method is used to get or set CSS properties of elements.",
        "answer": "$('#elementID').css('color', 'red'); changes the text color to red.",
        "start_char": 0,
        "end_char": 67
    },
    {
        "question": "What is the purpose of the .width() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .width() method is used to get or set the width of an element.",
        "answer": "$('#elementID').width(200); sets the width of the element to 200 pixels.",
        "start_char": 0,
        "end_char": 72
    },
    {
        "question": "What is the purpose of the .height() method in jQuery?",
        "label": "jquery",
        " language": "en",
        "context": "The .height() method is used to get or set the height of an element.",
        "answer": "$('#elementID').height(100); sets the height of the element to 100 pixels.",
        "start_char": 0,
        "end_char": 74
    },
    {
        "question": "What is the purpose of the .offset() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .offset() method retrieves the current position of an element relative to the document.",
        "answer": "$('#elementID').offset(); returns the current coordinates of the element.",
        "start_char": 0,
        "end_char": 73
    },
    {
        "question": "What is the purpose of the .position() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .position() method retrieves the current position of an element relative to its offset parent.",
        "answer": "$('#elementID').position(); returns the position of the element relative to its parent.",
        "start_char": 0,
        "end_char": 87
    },
    {
        "question": "What is the purpose of the .siblings() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .siblings() method retrieves all sibling elements of the selected element.",
        "answer": "$('#elementID').siblings(); returns all siblings of the specified element.",
        "start_char": 0,
        "end_char": 74
    },
    {
        "question": "What is the purpose of the .parent() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .parent() method retrieves the immediate parent of the selected element.",
        "answer": "$('#elementID').parent(); returns the parent element of the specified element.",
        "start_char": 0,
        "end_char": 78
    },
    {
        "question": "What is the purpose of the .children() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .children() method retrieves all child elements of the selected element.",
        "answer": "$('#elementID').children(); returns all children of the specified element.",
        "start_char": 0,
        "end_char": 74
    },
    {
        "question": "What is the purpose of the .find() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .find() method retrieves all descendant elements of the selected element.",
        "answer": "$('#elementID').find('.className'); returns all elements with the specified class within the selected element.",
        "start_char": 0,
        "end_char": 110
    },
    {
        "question": "What is the purpose of the .each() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .each() method iterates over a jQuery object, executing a function for each matched element.",
        "answer": "$('.className').each(function(index) { ... }); executes a function for each element in the set.",
        "start_char": 0,
        "end_char": 95
    },
    {
        "question": "What is the purpose of the .data() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .data() method is used to store and retrieve data associated with the selected elements.",
        "answer": "$('#elementID').data('key', 'value'); sets a data attribute for the element.",
        "start_char": 0,
        "end_char": 76
    },
    {
        "question": "What is the purpose of the .fadeToggle() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .fadeToggle() method toggles the visibility of an element with a fading effect.",
        "answer": "$('#elementID').fadeToggle(); toggles the visibility of the specified element.",
        "start_char": 0,
        "end_char": 78
    },
    {
        "question": "What is the purpose of the .slideToggle() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .slideToggle() method toggles the visibility of an element with a sliding effect.",
        "answer": "$('#elementID').slideToggle(); toggles the visibility of the specified element.",
        "start_char": 0,
        "end_char": 79
    },
    {
        "question": "What is the purpose of the .stop() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .stop() method stops the currently running animations on the selected elements.",
        "answer": "$('#elementID').stop(); stops the animation on the specified element.",
        "start_char": 0,
        "end_char": 69
    },
    {
        "question": "What is the purpose of the .promise() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .promise() method returns a promise object that resolves when all animations on the selected elements are complete.",
        "answer": "$('#elementID').promise(); returns a promise for the completion of animations.",
        "start_char": 0,
        "end_char": 78
    },
    {
        "question": "What is the purpose of the .queue() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .queue() method manages the queue of functions to be executed on the selected elements.",
        "answer": "$('#elementID').queue(); retrieves the current queue of functions for the specified element.",
        "start_char": 0,
        "end_char": 92
    },
    {
        "question": "What is the purpose of the .dequeue() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .dequeue() method removes the next function from the queue and executes it.",
        "answer": "$('#elementID').dequeue(); executes the next function in the queue.",
        "start_char": 0,
        "end_char": 67
    },
    {
        "question": "What is the purpose of the .fadeTo() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .fadeTo() method gradually changes the opacity of an element to a specified value.",
        "answer": "$('#elementID').fadeTo(1000, 0.5); fades the element to 50% opacity over 1 second.",
        "start_char": 0,
        "end_char": 82
    },
    {
        "question": "What is the purpose of the .slideToggle() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .slideToggle() method toggles the visibility of an element with a sliding motion.",
        "answer": "$('#elementID').slideToggle(); toggles the visibility of the specified element.",
        "start_char": 0,
        "end_char": 79
    },
    {
        "question": "What is the purpose of the .focus() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .focus() method sets focus on the selected element.",
        "answer": "$('#inputID').focus(); sets the focus on the specified input element.",
        "start_char": 0,
        "end_char": 69
    },
    {
        "question": "What is the purpose of the .blur() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .blur() method removes focus from the selected element.",
        "answer": "$('#inputID').blur(); removes focus from the specified input element.",
        "start_char": 0,
        "end_char": 69
    },
    {
        "question": "What is the purpose of the .hover() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .hover() method binds handlers for both mouseenter and mouseleave events.",
        "answer": "$('#elementID').hover(function() { ... }, function() { ... }); handles mouse hover events.",
        "start_char": 0,
        "end_char": 90
    },
    {
        "question": "What is the purpose of the .toggleClass() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .toggleClass() method adds or removes a class from the selected elements.",
        "answer": "$('#elementID').toggleClass('active'); toggles the 'active' class on the specified element.",
        "start_char": 0,
        "end_char": 91
    },
    {
        "question": "What is the purpose of the .css() method in jQuery?",
        "label": "jquery",
        "language": "en",
        "context": "The .css() method is used to get or set CSS properties of elements.",
        "answer": "$('#elementID').css('background-color', 'blue'); changes the background color to blue.",
        "start_char": 0,
        "end_char": 86
    },
    {
        "question": "What is C++?",
        "label": "cpp",
        "language": "en",
        "context": "C++ is a general-purpose programming language created as an extension of the C programming language.",
        "answer": "C++ is known for its performance, efficiency, and flexibility, and it supports both procedural and object-oriented programming.",
        "start_char": 0,
        "end_char": 127
    },
    {
        "question": "What are the main features of C++?",
        "label": "cpp",
        "language": "en",
        "context": "C++ includes several key features that enhance its capabilities.",
        "answer": "Key features include object-oriented programming, encapsulation, inheritance, polymorphism, and templates.",
        "start_char": 0,
        "end_char": 106
    },
    {
        "question": "What is a class in C++?",
        "label": "cpp",
        "language": "en",
        "context": "A class is a user-defined data type that represents a blueprint for creating objects.",
        "answer": "Classes encapsulate data and functions that operate on that data.",
        "start_char": 0,
        "end_char": 65
    },
    {
        "question": "What is an object in C++?",
        "label": "cpp",
        "language": "en",
        "context": "An object is an instance of a class.",
        "answer": "Objects are created from classes and can hold data and perform functions defined in the class.",
        "start_char": 0,
        "end_char": 94
    },
    {
        "question": "What is the difference between a class and a struct in C++?",
        "label": "cpp",
        "language": "en",
        "context": "Classes and structs are both used to define custom data types in C++.",
        "answer": "The main difference is that members of a class are private by default, while members of a struct are public by default.",
        "start_char": 0,
        "end_char": 119
    },
    {
        "question": "What is encapsulation in C++?",
        "label": "cpp",
        "language": "en",
        "context": "Encapsulation is the bundling of data and methods that operate on that data within a single unit, or class.",
        "answer": "It restricts direct access to some of an object's components and can prevent the accidental modification of data.",
        "start_char": 0,
        "end_char": 113
    },
    {
        "question": "What is inheritance in C++?",
        "label": "cpp",
        "language": "en",
        "context": "Inheritance is a mechanism that allows one class to inherit the properties and methods of another class.",
        "answer": "It promotes code reusability and establishes a relationship between classes.",
        "start_char": 0,
        "end_char": 76
    },
    {
        "question": "What is polymorphism in C++?",
        "label": "cpp",
        "language": "en",
        "context": "Polymorphism allows methods to do different things based on the object that it is acting upon.",
        "answer": "In C++, polymorphism can be achieved through function overloading and function overriding.",
        "start_char": 0,
        "end_char": 90
    },
    {
        "question": "What is a constructor in C++?",
        "label": "cpp",
        "language": "en",
        "context": "A constructor is a special member function that is automatically called when an object is created.",
        "answer": "Constructors are used to initialize objects.",
        "start_char": 0,
        "end_char": 44
    },
    {
        "question": "What is a destructor in C++?",
        "label": "cpp",
        "language": "en",
        "context": "A destructor is a special member function that is automatically called when an object is destroyed.",
        "answer": "Destructors are used to release resources allocated to the object.",
        "start_char": 0,
        "end_char": 66
    },
    {
        "question": "What is the purpose of the 'new' keyword in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The 'new' keyword is used to dynamically allocate memory for an object or array.",
        "answer": "It returns a pointer to the allocated memory.",
        "start_char": 0,
        "end_char": 45
    },
    {
        "question": "What is the purpose of the 'delete' keyword in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The 'delete' keyword is used to deallocate memory that was previously allocated with 'new'.",
        "answer": "It frees up memory and prevents memory leaks.",
        "start_char": 0,
        "end_char": 45
    },
    {
        "question": "What is a pointer in C++?",
        "label": "cpp",
        "language": "en",
        "context": "A pointer is a variable that stores the memory address of another variable.",
        "answer": "Pointers are used for dynamic memory allocation and to reference objects.",
        "start_char": 0,
        "end_char": 73
    },
    {
        "question": "What is a reference in C++?",
        "label": "cpp",
        "language": "en",
        "context": "A reference is an alias for another variable.",
        "answer": "References provide an alternative name for an existing variable.",
        "start_char": 0,
        "end_char": 64
    },
    {
        "question": "What is the purpose of the 'const' keyword in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The 'const' keyword is used to define constants or to indicate that a variable's value cannot be changed.",
        "answer": "It helps prevent accidental modification of data.",
        "start_char": 0,
        "end_char": 49
    },
    {
        "question": "What is function overloading in C++?",
        "label": "cpp",
        "language": "en",
        "context": "Function overloading allows multiple functions to have the same name with different parameters.",
        "answer": "It enables the creation of functions that perform similar tasks with different types or numbers of arguments.",
        "start_char": 0,
        "end_char": 109
    },
    {
        "question": "What is function overriding in C++?",
        "label": "cpp",
        "language": "en",
        "context": "Function overriding allows a derived class to provide a specific implementation of a method that is already defined in its base class.",
        "answer": "It is used to achieve runtime polymorphism.",
        "start_char": 0,
        "end_char": 43
    },
    {
        "question": "What is the purpose of the 'virtual' keyword in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The 'virtual' keyword is used to declare a method that can be overridden in derived classes.",
        "answer": "It enables dynamic dispatch of method calls.",
        "start_char": 0,
        "end_char": 44
    },
    {
        "question": "What is a pure virtual function in C++?",
        "label": "cpp",
        "language": "en",
        "context": "A pure virtual function is a function declared in a base class that has no implementation.",
        "answer": "It makes the class abstract and requires derived classes to provide an implementation.",
        "start_char": 0,
        "end_char": 86
    },
    {
        "question": "What is an abstract class in C++?",
        "label": "cpp",
        "language": "en",
        "context": "An abstract class is a class that cannot be instantiated and may contain pure virtual functions.",
        "answer": "It serves as a base class for other classes.",
        "start_char": 0,
        "end_char": 44
    },
    {
        "question": "What is multiple inheritance in C++?",
        "label": "cpp",
        "language": "en",
        "context": "Multiple inheritance allows a class to inherit from more than one base class.",
        "answer": "It enables the derived class to inherit features from multiple classes.",
        "start_char": 0,
        "end_char": 71
    },
    {
        "question": "What is the diamond problem in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The diamond problem occurs in multiple inheritance when two base classes inherit from the same class.",
        "answer": "It can lead to ambiguity in method resolution.",
        "start_char": 0,
        "end_char": 46
    },
    {
        "question": "What is a template in C++?",
        "label": "cpp",
        "language": "en",
        "context": "Templates allow functions and classes to operate with generic types.",
        "answer": "They enable code reusability and type safety.",
        "start_char": 0,
        "end_char": 45
    },
    {
        "question": "What is the Standard Template Library (STL) in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The STL is a powerful library that provides a set of common data structures and algorithms.",
        "answer": "It includes containers, iterators, algorithms, and function objects.",
        "start_char": 0,
        "end_char": 68
    },
    {
        "question": "What is a vector in C++?",
        "label": "cpp",
        "language": "en",
        "context": "A vector is a dynamic array provided by the STL.",
        "answer": "Vectors can grow and shrink in size and provide random access to elements.",
        "start_char": 0,
        "end_char": 74
    },
    {
        "question": "What is a list in C++?",
        "label": "cpp",
        "language": "en",
        "context": "A list is a doubly linked list provided by the STL.",
        "answer": "Lists allow for efficient insertion and deletion of elements.",
        "start_char": 0,
        "end_char": 61
    },
    {
        "question": "What is a map in C++?",
        "label": "cpp",
        "language": "en",
        "context": "A map is an associative container that stores key-value pairs.",
        "answer": "Maps provide fast retrieval of values based on keys.",
        "start_char": 0,
        "end_char": 52
    },
    {
        "question": "What is an iterator in C++?",
        "label": "cpp",
        "language": "en",
        "context": "An iterator is an object that enables traversal of a container's elements.",
        "answer": "Iterators provide a way to access elements without exposing the underlying structure.",
        "start_char": 0,
        "end_char": 85
    },
    {
        "question": "What is the purpose of the 'friend' keyword in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The 'friend' keyword allows a function or class to access private and protected members of another class.",
        "answer": "It is used to grant special access to specific functions or classes.",
        "start_char": 0,
        "end_char": 68
    },
    {
        "question": "What is the purpose of the 'static' keyword in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The 'static' keyword can be used to define static variables and functions.",
        "answer": "Static members belong to the class rather than instances and retain their value between function calls.",
        "start_char": 0,
        "end_char": 103
    },
    {
        "question": "What is the purpose of the 'const' keyword in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The 'const' keyword is used to define constants or to indicate that a variable's value cannot be changed.",
        "answer": "It helps prevent accidental modification of data.",
        "start_char": 0,
        "end_char": 49
    },
    {
        "question": "What is exception handling in C++?",
        "label": "cpp",
        "language": "en",
        "context": "Exception handling is a mechanism to handle runtime errors in a controlled manner.",
        "answer": "It uses try, catch, and throw keywords to manage exceptions.",
        "start_char": 0,
        "end_char": 60
    },
    {
        "question": "What is the purpose of the 'try' block in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The 'try' block contains code that may throw an exception.",
        "answer": "It allows the program to attempt execution of code that might fail.",
        "start_char": 0,
        "end_char": 67
    },
    {
        "question": "What is the purpose of the 'catch' block in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The 'catch' block handles exceptions thrown by the 'try' block.",
        "answer": "It allows the program to respond to errors gracefully.",
        "start_char": 0,
        "end_char": 54
    },
    {
        "question": "What is the purpose of the 'throw' keyword in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The 'throw' keyword is used to signal the occurrence of an exception.",
        "answer": "It transfers control to the nearest catch block.",
        "start_char": 0,
        "end_char": 48
    },
    {
        "question": "What is the purpose of the 'namespace' in C++?",
        "label": "cpp",
        "language": "en",
        "context": "Namespaces are used to organize code and prevent name conflicts.",
        "answer": "They allow the same name to be used in different contexts.",
        "start_char": 0,
        "end_char": 58
    },
    {
        "question": "What is the purpose of the 'using' directive in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The 'using' directive allows the use of names from a namespace without qualification.",
        "answer": "It simplifies code by reducing the need for fully qualified names.",
        "start_char": 0,
        "end_char": 66
    },
    {
        "question": "What is the purpose of the 'sizeof' operator in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The 'sizeof' operator returns the size of a data type or object in bytes.",
        "answer": "It is useful for determining memory allocation.",
        "start_char": 0,
        "end_char": 47
    },
    {
        "question": "What is a lambda expression in C++?",
        "label": "cpp",
        "language": "en",
        "context": "A lambda expression is an anonymous function that can be defined inline.",
        "answer": "It allows for the creation of function objects without a separate function definition.",
        "start_char": 0,
        "end_char": 86
    },
    {
        "question": "What is the purpose of the 'std::cout' in C++?",
        "label": "cpp",
        "language": "en",
        "context": "std::cout is used to output data to the standard output stream.",
        "answer": "It is commonly used for displaying text and variables.",
        "start_char": 0,
        "end_char": 54
    },
    {
        "question": "What is the purpose of the 'std::cin' in C++?",
        "label": "cpp",
        "language": "en",
        "context": "std::cin is used to read input from the standard input stream.",
        "answer": "It allows users to enter data during program execution.",
        "start_char": 0,
        "end_char": 55
    },
    {
        "question": "What is the purpose of the 'std::endl' in C++?",
        "label": "cpp",
        "language": "en",
        "context": "std::endl is used to insert a newline character and flush the output buffer.",
        "answer": "It ensures that all output is displayed immediately.",
        "start_char": 0,
        "end_char": 52
    },
    {
        "question": "What is the purpose of the 'main' function in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The 'main' function is the entry point of a C++ program.",
        "answer": "It is where program execution begins.",
        "start_char": 0,
        "end_char": 37
    },
    {
        "question": "What is the purpose of the 'return' statement in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The 'return' statement exits a function and optionally returns a value.",
        "answer": "It indicates the end of a function's execution.",
        "start_char": 0,
        "end_char": 47
    },
    {
        "question": "What is a static member function in C++?",
        "label": "cpp",
        "language": "en",
        "context": "A static member function belongs to the class rather than any object instance.",
        "answer": "It can be called without creating an object of the class.",
        "start_char": 0,
        "end_char": 57
    },
    {
        "question": "What is the purpose of the 'this' pointer in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The 'this' pointer refers to the current object instance within a class.",
        "answer": "It is used to access members of the current object.",
        "start_char": 0,
        "end_char": 51
    },
    {
        "question": "What is the purpose of the 'virtual destructor' in C++?",
        "label": "cpp",
        "language": "en",
        "context": "A virtual destructor ensures that the destructor of the derived class is called when an object is deleted through a base class pointer.",
        "answer": "It prevents resource leaks and ensures proper cleanup of derived class resources.",
        "start_char": 0,
        "end_char": 81
    },
    {
        "question": "What is the purpose of the 'override' keyword in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The 'override' keyword indicates that a method is intended to override a virtual method in a base class.",
        "answer": "It helps catch errors at compile time if the base class method is not virtual.",
        "start_char": 0,
        "end_char": 78
    },
    {
        "question": "What is the purpose of the 'final' keyword in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The 'final' keyword prevents further inheritance of a class or overriding of a virtual method.",
        "answer": "It is used to restrict the extensibility of classes and methods.",
        "start_char": 0,
        "end_char": 64
    },
    {
        "question": "What is the purpose of the 'decltype' keyword in C++?",
        "label": "cpp",
        "language": "en",
        "context": "The 'decltype' keyword is used to query the type of an expression.",
        "answer": "It allows for type inference based on the type of a variable or expression.",
        "start_char": 0,
        "end_char": 75
    },
    {
        "question": "What does CSS stand for?",
        "label": "css",
        "language": "en",
        "context": "CSS is a stylesheet language used for describing the presentation of a document written in HTML or XML.",
        "answer": "CSS stands for Cascading Style Sheets.",
        "start_char": 0,
        "end_char": 38
    },
    {
        "question": "What is the purpose of CSS?",
        "label": "css",
        "language": "en",
        "context": "CSS is used to control the layout and appearance of web pages.",
        "answer": "It allows developers to apply styles such as colors, fonts, and spacing to HTML elements.",
        "start_char": 0,
        "end_char": 89
    },
    {
        "question": "What is a CSS selector?",
        "label": "css",
        "language": "en",
        "context": "A CSS selector is a pattern used to select the elements you want to style.",
        "answer": "Selectors can be based on element type, class, ID, and more.",
        "start_char": 0,
        "end_char": 60
    },
    {
        "question": "What is the difference between class selectors and ID selectors in CSS?",
        "label": "css",
        "language": "en",
        "context": "Class selectors and ID selectors are used to apply styles to elements.",
        "answer": "Class selectors are denoted with a dot (.) and can be reused, while ID selectors are denoted with a hash (#) and must be unique.",
        "start_char": 0,
        "end_char": 128
    },
    {
        "question": "What is the box model in CSS?",
        "label": "css",
        "language": "en",
        "context": "The box model describes the rectangular boxes generated for elements in the document tree.",
        "answer": "It consists of margins, borders, padding, and the actual content area.",
        "start_char": 0,
        "end_char": 70
    },
    {
        "question": "What is the purpose of the 'margin' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'margin' property is used to create space around elements.",
        "answer": "Margins are transparent and can be set for all four sides of an element.",
        "start_char": 0,
        "end_char": 72
    },
    {
        "question": "What is the purpose of the 'padding' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'padding' property is used to create space between the content of an element and its border.",
        "answer": "Padding is inside the element and can also be set for all four sides.",
        "start_char": 0,
        "end_char": 69
    },
    {
        "question": "What is the purpose of the 'border' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'border' property is used to define the border around an element.",
        "answer": "Borders can have different styles, widths, and colors.",
        "start_char": 0,
        "end_char": 54
    },
    {
        "question": "What is the difference between 'inline', 'block', and 'inline-block' elements in CSS?",
        "label": "css",
        "language": "en",
        "context": "Elements can be displayed in different ways using CSS display properties.",
        "answer": "'inline' elements do not start on a new line, 'block' elements do, and 'inline-block' elements allow setting width and height while remaining inline.",
        "start_char": 0,
        "end_char": 149
    },
    {
        "question": "What is the purpose of the 'display' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'display' property specifies the display behavior of an element.",
        "answer": "It can take values like 'none', 'block', 'inline', and 'flex'.",
        "start_char": 0,
        "end_char": 62
    },
    {
        "question": "What is a CSS flexbox?",
        "label": "css",
        "language": "en",
        "context": "Flexbox is a layout model that allows for the arrangement of elements in a one-dimensional space.",
        "answer": "It provides a more efficient way to lay out, align, and distribute space among items in a container.",
        "start_char": 0,
        "end_char": 100
    },
    {
        "question": "What is a CSS grid?",
        "label": "css",
        "language": "en",
        "context": "CSS Grid Layout is a two-dimensional layout system for the web.",
        "answer": "It allows for the creation of complex layouts using rows and columns.",
        "start_char": 0,
        "end_char": 69
    },
    {
        "question": "What is the purpose of the 'position' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'position' property specifies the positioning method for an element.",
        "answer": "It can take values like 'static', 'relative', 'absolute', 'fixed', and 'sticky'.",
        "start_char": 0,
        "end_char": 80
    },
    {
        "question": "What is the purpose of the 'z-index' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'z-index' property controls the vertical stacking order of overlapping elements.",
        "answer": "Elements with a higher z-index are displayed in front of those with a lower z-index.",
        "start_char": 0,
        "end_char": 84
    },
    {
        "question": "What is the purpose of the 'float' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'float' property is used to position an element to the left or right of its container.",
        "answer": "It allows text and inline elements to wrap around the floated element.",
        "start_char": 0,
        "end_char": 70
    },
    {
        "question": "What is the purpose of the 'clear' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'clear' property is used to control the behavior of floating elements.",
        "answer": "It specifies whether an element can be next to floating elements or should be moved below them.",
        "start_char": 0,
        "end_char": 95
    },
    {
        "question": "What is the purpose of the 'overflow' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'overflow' property controls what happens when content overflows an element's box.",
        "answer": "It can take values like 'visible', 'hidden', 'scroll', and 'auto'.",
        "start_char": 0,
        "end_char": 66
    },
    {
        "question": "What is the purpose of the 'opacity' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'opacity' property sets the transparency level of an element.",
        "answer": "It takes a value between 0 (completely transparent) and 1 (completely opaque).",
        "start_char": 0,
        "end_char": 78
    },
    {
        "question": "What is the purpose of the 'background-color' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'background-color' property sets the background color of an element.",
        "answer": "It can take color values in various formats, such as hex, RGB, or named colors.",
        "start_char": 0,
        "end_char": 79
    },
    {
        "question": "What is the purpose of the 'font-size' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'font-size' property sets the size of the text in an element.",
        "answer": "It can take values in units like pixels, ems, or percentages.",
        "start_char": 0,
        "end_char": 61
    },
    {
        "question": "What is the purpose of the 'font-family' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'font-family' property specifies the font for an element's text.",
        "answer": "It can take a list of font names and generic family names.",
        "start_char": 0,
        "end_char": 58
    },
    {
        "question": "What is the purpose of the 'text-align' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'text-align' property sets the horizontal alignment of text within an element.",
        "answer": "It can take values like 'left', 'right', 'center', and 'justify'.",
        "start_char": 0,
        "end_char": 65
    },
    {
        "question": "What is the purpose of the 'line-height' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'line-height' property sets the amount of space above and below inline elements.",
        "answer": "It controls the height of a line box and affects the spacing between lines of text.",
        "start_char": 0,
        "end_char": 83
    },
    {
        "question": "What is the purpose of the 'margin' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'margin' property creates space around elements.",
        "answer": "Margins can be set for all four sides of an element and are transparent.",
        "start_char": 0,
        "end_char": 72
    },
    {
        "question": "What is the purpose of the 'padding' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'padding' property creates space between the content of an element and its border.",
        "answer": "Padding can also be set for all four sides of an element.",
        "start_char": 0,
        "end_char": 57
    },
    {
        "question": "What is the purpose of the 'border' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'border' property defines the border around an element.",
        "answer": "It can specify the width, style, and color of the border.",
        "start_char": 0,
        "end_char": 57
    },
    {
        "question": "What is the purpose of the 'display' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'display' property specifies the display behavior of an element.",
        "answer": "It can take values like 'block', 'inline', 'flex', and 'grid'.",
        "start_char": 0,
        "end_char": 62
    },
    {
        "question": "What is the purpose of the 'visibility' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'visibility' property controls the visibility of an element.",
        "answer": "It can take values like 'visible', 'hidden', and 'collapse'.",
        "start_char": 0,
        "end_char": 60
    },
    {
        "question": "What is the purpose of the 'position' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'position' property specifies the positioning method for an element.",
        "answer": "It can take values like 'static', 'relative', 'absolute', 'fixed', and 'sticky'.",
        "start_char": 0,
        "end_char": 80
    },
    {
        "question": "What is the purpose of the 'flex-direction' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'flex-direction' property defines the direction in which flex items are placed in the flex container.",
        "answer": "It can take values like 'row', 'row-reverse', 'column', and 'column-reverse'.",
        "start_char": 0,
        "end_char": 77
    },
    {
        "question": "What is the purpose of the 'align-items' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'align-items' property aligns flex items along the cross axis in a flex container.",
        "answer": "It can take values like 'flex-start', 'flex-end', 'center', 'baseline', and 'stretch'.",
        "start_char": 0,
        "end_char": 86
    },
    {
        "question": "What is the purpose of the 'justify-content' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'justify-content' property aligns flex items along the main axis in a flex container.",
        "answer": "It can take values like 'flex-start', 'flex-end', 'center', 'space-between', and 'space-around'.",
        "start_char": 0,
        "end_char": 96
    },
    {
        "question": "What is the purpose of the 'grid-template-columns' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'grid-template-columns' property defines the number and size of columns in a grid layout.",
        "answer": "It allows you to specify the width of each column in the grid.",
        "start_char": 0,
        "end_char": 62
    },
    {
        "question": "What is the purpose of the 'grid-template-rows' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'grid-template-rows' property defines the number and size of rows in a grid layout.",
        "answer": "It allows you to specify the height of each row in the grid.",
        "start_char": 0,
        "end_char": 60
    },
    {
        "question": "What is the purpose of the 'grid-area' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'grid-area' property is used to specify a grid item's size and location within a grid layout.",
        "answer": "It can define which row and column the item should occupy.",
        "start_char": 0,
        "end_char": 58
    },
    {
        "question": "What is the purpose of the 'transition' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'transition' property allows you to change property values smoothly over a specified duration.",
        "answer": "It enhances the user experience by providing visual feedback.",
        "start_char": 0,
        "end_char": 61
    },
    {
        "question": "What is the purpose of the 'animation' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'animation' property is used to create animations by changing CSS properties over time.",
        "answer": "It allows for keyframe animations and can control the timing and duration.",
        "start_char": 0,
        "end_char": 74
    },
    {
        "question": "What is the purpose of the 'keyframes' rule in CSS?",
        "label": "css",
        "language": "en",
        "context": "The '@keyframes' rule defines the styles for an animation at various points in time.",
        "answer": "It specifies the intermediate steps in a CSS animation sequence.",
        "start_char": 0,
        "end_char": 64
    },
    {
        "question": "What is the purpose of the 'media queries' in CSS?",
        "label": "css",
        "language": "en",
        "context": "Media queries are used to apply different styles based on the device's characteristics.",
        "answer": "They enable responsive design by allowing styles to adapt to different screen sizes.",
        "start_char": 0,
        "end_char": 84
    },
    {
        "question": "What is the purpose of the 'calc()' function in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'calc()' function allows you to perform calculations to set CSS property values.",
        "answer": "It can combine different units, such as percentages and pixels.",
        "start_char": 0,
        "end_char": 63
    },
    {
        "question": "What is the purpose of the 'var()' function in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'var()' function is used to access CSS custom properties (variables).",
        "answer": "It allows for dynamic styling and easier maintenance of styles.",
        "start_char": 0,
        "end_char": 63
    },
    {
        "question": "What is the purpose of the 'rem' unit in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'rem' unit is a relative unit that stands for 'root em'.",
        "answer": "It is based on the font size of the root element, making it useful for responsive design.",
        "start_char": 0,
        "end_char": 89
    },
    {
        "question": "What is the purpose of the 'filter' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'filter' property applies graphical effects like blurring or color shifting to an element.",
        "answer": "It can be used to create visual effects and enhance images.",
        "start_char": 0,
        "end_char": 59
    },
    {
        "question": "What is the purpose of the 'clip-path' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'clip-path' property creates a clipping region for an element.",
        "answer": "It allows you to define a specific area of an element to be visible.",
        "start_char": 0,
        "end_char": 68
    },
    {
        "question": "What is the purpose of the 'opacity' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'opacity' property sets the transparency level of an element.",
        "answer": "It can take a value between 0 (completely transparent) and 1 (completely opaque).",
        "start_char": 0,
        "end_char": 81
    },
    {
        "question": "What is the purpose of the 'transition-duration' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'transition-duration' property specifies the duration of a transition effect.",
        "answer": "It defines how long the transition should take to complete.",
        "start_char": 0,
        "end_char": 59
    },
    {
        "question": "What is the purpose of the 'transition-timing-function' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'transition-timing-function' property specifies the speed curve of a transition effect.",
        "answer": "It can take values like 'linear', 'ease', 'ease-in', 'ease-out', and 'ease-in-out'.",
        "start_char": 0,
        "end_char": 83
    },
    {
        "question": "What is the purpose of the 'animation-duration' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'animation-duration' property specifies the length of time an animation takes to complete one cycle.",
        "answer": "It defines how long the animation should run.",
        "start_char": 0,
        "end_char": 45
    },
    {
        "question": "What is the purpose of the 'animation-timing-function' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'animation-timing-function' property specifies the speed curve of an animation.",
        "answer": "It can take values like 'linear', 'ease', 'ease-in', 'ease-out', and 'ease-in-out'.",
        "start_char": 0,
        "end_char": 83
    },
    {
        "question": "What is the purpose of the 'animation-delay' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'animation-delay' property specifies a delay before the animation starts.",
        "answer": "It allows you to control when the animation begins.",
        "start_char": 0,
        "end_char": 51
    },
    {
        "question": "What is the purpose of the 'animation-iteration-count' property in CSS?",
        "label": "css",
        "language": "en",
        "context": "The 'animation-iteration-count' property specifies the number of times an animation should repeat.",
        "answer": "It can take a specific number or the value 'infinite'.",
        "start_char": 0,
        "end_char": 54
    }
]